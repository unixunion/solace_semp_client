basePath: /SEMP/v2/monitor
consumes:
- application/json
definitions:
  AboutApi:
    properties:
      platform:
        description: The platform running the SEMP API.
        type: string
      sempVersion:
        description: The version of the SEMP API.
        type: string
    required:
    - platform
    - sempVersion
    type: object
  AboutApiLinks:
    properties:
      uri:
        description: The URI of this AboutApi object.
        type: string
    type: object
  AboutApiResponse:
    properties:
      data:
        $ref: '#/definitions/AboutApi'
      links:
        $ref: '#/definitions/AboutApiLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  AboutUser:
    properties:
      globalAccessLevel:
        description: 'The global access level of the User. The allowed values and
          their meaning are:


          <pre>

          "admin" - Full administrative access.

          "none" - No access.

          "read-only" - Read only access.

          "read-write" - Read and write access.

          </pre>

          '
        enum:
        - admin
        - none
        - read-only
        - read-write
        type: string
    type: object
  AboutUserLinks:
    properties:
      msgVpnsUri:
        description: The URI of this AboutUser's msgVpns collection.
        type: string
      uri:
        description: The URI of this AboutUser object.
        type: string
    type: object
  AboutUserMsgVpn:
    properties:
      accessLevel:
        description: 'The Message VPN access level of the User. The allowed values
          and their meaning are:


          <pre>

          "none" - No access.

          "read-only" - Read only access.

          "read-write" - Read and write access.

          </pre>

          '
        enum:
        - none
        - read-only
        - read-write
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
    type: object
  AboutUserMsgVpnLinks:
    properties:
      uri:
        description: The URI of this AboutUserMsgVpn object.
        type: string
    type: object
  AboutUserMsgVpnResponse:
    properties:
      data:
        $ref: '#/definitions/AboutUserMsgVpn'
      links:
        $ref: '#/definitions/AboutUserMsgVpnLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  AboutUserMsgVpnsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/AboutUserMsgVpn'
        type: array
      links:
        items:
          $ref: '#/definitions/AboutUserMsgVpnLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  AboutUserResponse:
    properties:
      data:
        $ref: '#/definitions/AboutUser'
      links:
        $ref: '#/definitions/AboutUserLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  DmrCluster:
    properties:
      authenticationBasicEnabled:
        description: Enable or disable basic authentication for Cluster Links.
        type: boolean
      authenticationBasicType:
        description: 'The type of basic authentication to use for Cluster Links. The
          allowed values and their meaning are:


          <pre>

          "internal" - Use locally configured password.

          "none" - No authentication.

          </pre>

          '
        enum:
        - internal
        - none
        type: string
      authenticationClientCertEnabled:
        description: Enable or disable client certificate authentication for Cluster
          Links.
        type: boolean
      directOnlyEnabled:
        description: Enable or disable direct messaging only. Guaranteed messages
          will not be transmitted through the cluster.
        type: boolean
      dmrClusterName:
        description: The name of the Cluster.
        type: string
      enabled:
        description: Enable or disable the Cluster.
        type: boolean
      failureReason:
        description: The failure reason for the Cluster being down.
        type: string
      nodeName:
        description: The name of this node in the Cluster. This is the name that this
          broker (or redundant group of brokers) is know by to other nodes in the
          Cluster. The name is chosen automatically to be either this broker's Router
          Name or Mate Router Name, depending on which Active Standby Role (primary
          or backup) this broker plays in its redundancy group.
        type: string
      tlsServerCertEnforceTrustedCommonNameEnabled:
        description: Enable or disable the enforcing of the common-name provided by
          the remote broker against the list of trusted common-names configured for
          the Link. If enabled, the certificate's common-name must match one of the
          trusted common-names for the Link to be accepted.
        type: boolean
      tlsServerCertMaxChainDepth:
        description: The maximum allowed depth of a certificate chain. The depth of
          a chain is defined as the number of signing CA certificates that are present
          in the chain back to a trusted self-signed root CA certificate.
        format: int64
        type: integer
      tlsServerCertValidateDateEnabled:
        description: Enable or disable the validation of the "Not Before" and "Not
          After" validity dates in the certificate. When disabled, the certificate
          is accepted even if the certificate is not valid based on these dates.
        type: boolean
      up:
        description: Indicates whether the Cluster is operationally up.
        type: boolean
      uptime:
        description: The amount of time in seconds since the Cluster was up.
        format: int64
        type: integer
    type: object
  DmrClusterLink:
    properties:
      authenticationScheme:
        description: 'The authentication scheme to be used by the Link which initiates
          connections to the remote node. The allowed values and their meaning are:


          <pre>

          "basic" - Basic Authentication Scheme (via username and password).

          "client-certificate" - Client Certificate Authentication Scheme (via certificate
          file or content).

          </pre>

          '
        enum:
        - basic
        - client-certificate
        type: string
      clientProfileName:
        description: The name of the Client Profile used by the Link.
        type: string
      clientProfileQueueControl1MaxDepth:
        description: The maximum depth of the "Control 1" (C-1) priority queue, in
          work units. Each work unit is 2048 bytes of message data.
        format: int32
        type: integer
      clientProfileQueueControl1MinMsgBurst:
        description: The number of messages that are always allowed entry into the
          "Control 1" (C-1) priority queue, regardless of the "queueControl1MaxDepth"
          value.
        format: int32
        type: integer
      clientProfileQueueDirect1MaxDepth:
        description: The maximum depth of the "Direct 1" (D-1) priority queue, in
          work units. Each work unit is 2048 bytes of message data.
        format: int32
        type: integer
      clientProfileQueueDirect1MinMsgBurst:
        description: The number of messages that are always allowed entry into the
          "Direct 1" (D-1) priority queue, regardless of the "queueDirect1MaxDepth"
          value.
        format: int32
        type: integer
      clientProfileQueueDirect2MaxDepth:
        description: The maximum depth of the "Direct 2" (D-2) priority queue, in
          work units. Each work unit is 2048 bytes of message data.
        format: int32
        type: integer
      clientProfileQueueDirect2MinMsgBurst:
        description: The number of messages that are always allowed entry into the
          "Direct 2" (D-2) priority queue, regardless of the "queueDirect2MaxDepth"
          value.
        format: int32
        type: integer
      clientProfileQueueDirect3MaxDepth:
        description: The maximum depth of the "Direct 3" (D-3) priority queue, in
          work units. Each work unit is 2048 bytes of message data.
        format: int32
        type: integer
      clientProfileQueueDirect3MinMsgBurst:
        description: The number of messages that are always allowed entry into the
          "Direct 3" (D-3) priority queue, regardless of the "queueDirect3MaxDepth"
          value.
        format: int32
        type: integer
      clientProfileQueueGuaranteed1MaxDepth:
        description: The maximum depth of the "Guaranteed 1" (G-1) priority queue,
          in work units. Each work unit is 2048 bytes of message data.
        format: int32
        type: integer
      clientProfileQueueGuaranteed1MinMsgBurst:
        description: The number of messages that are always allowed entry into the
          "Guaranteed 1" (G-3) priority queue, regardless of the "queueGuaranteed1MaxDepth"
          value.
        format: int32
        type: integer
      clientProfileTcpCongestionWindowSize:
        description: The TCP initial congestion window size, in multiples of the TCP
          Maximum Segment Size (MSS). Changing the value from its default of 2 results
          in non-compliance with RFC 2581. Contact Solace Support before changing
          this value.
        format: int64
        type: integer
      clientProfileTcpKeepaliveCount:
        description: The number of TCP keepalive retransmissions to be carried out
          before declaring that the remote end is not available.
        format: int64
        type: integer
      clientProfileTcpKeepaliveIdleTime:
        description: The amount of time a connection must remain idle before TCP begins
          sending keepalive probes, in seconds.
        format: int64
        type: integer
      clientProfileTcpKeepaliveInterval:
        description: The amount of time between TCP keepalive retransmissions when
          no acknowledgement is received, in seconds.
        format: int64
        type: integer
      clientProfileTcpMaxSegmentSize:
        description: The TCP maximum segment size, in kilobytes. Changes are applied
          to all existing connections.
        format: int64
        type: integer
      clientProfileTcpMaxWindowSize:
        description: The TCP maximum window size, in kilobytes. Changes are applied
          to all existing connections.
        format: int64
        type: integer
      dmrClusterName:
        description: The name of the Cluster.
        type: string
      egressFlowWindowSize:
        description: The number of outstanding guaranteed messages that can be sent
          over the Link before acknowledgement is received by the sender.
        format: int64
        type: integer
      enabled:
        description: Enable or disable the Link. When disabled, subscription sets
          of this and the remote node are not kept up-to-date, and messages are not
          exchanged with the remote node. Published guaranteed messages will be queued
          up for future delivery based on current subscription sets.
        type: boolean
      failureReason:
        description: The failure reason for the Link being down.
        type: string
      initiator:
        description: 'The initiator of the Link''s TCP connections. The allowed values
          and their meaning are:


          <pre>

          "lexical" - The "higher" node-name initiates.

          "local" - The local node initiates.

          "remote" - The remote node initiates.

          </pre>

          '
        enum:
        - lexical
        - local
        - remote
        type: string
      queueDeadMsgQueue:
        description: The name of the Dead Message Queue (DMQ) used by the Queue for
          discarded messages.
        type: string
      queueEventSpoolUsageThreshold:
        $ref: '#/definitions/EventThreshold'
      queueMaxDeliveredUnackedMsgsPerFlow:
        description: The maximum number of messages delivered but not acknowledged
          per flow for the Queue.
        format: int64
        type: integer
      queueMaxMsgSpoolUsage:
        description: The maximum message spool usage by the Queue (quota), in megabytes
          (MB).
        format: int64
        type: integer
      queueMaxRedeliveryCount:
        description: The maximum number of times the Queue will attempt redelivery
          of a message prior to it being discarded or moved to the DMQ. A value of
          0 means to retry forever.
        format: int64
        type: integer
      queueMaxTtl:
        description: The maximum time in seconds a message can stay in the Queue when
          `respectTtlEnabled` is `true`. A message expires when the lesser of the
          sender assigned time-to-live (TTL) in the message and the `maxTtl` configured
          for the Queue, is exceeded. A value of 0 disables expiry.
        format: int64
        type: integer
      queueRejectMsgToSenderOnDiscardBehavior:
        description: 'The message discard behavior, providing the condition for returning
          a negative acknowledgement (NACK) to the sender. The allowed values and
          their meaning are:


          <pre>

          "always" - Always return a negative acknowledgment (NACK) to the sending
          client on message discard.

          "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the
          sending client on message discard when the Queue is enabled.

          "never" - Never return a negative acknowledgment (NACK) to the sending client
          on message discard.

          </pre>

          '
        enum:
        - always
        - when-queue-enabled
        - never
        type: string
      queueRespectTtlEnabled:
        description: Enable or disable the respecting of the time-to-live (TTL) for
          messages in the Queue. When enabled, expired messages are discarded or moved
          to the DMQ.
        type: boolean
      remoteNodeName:
        description: The name of the node at the remote end of the Link.
        type: string
      span:
        description: 'The span of the Link, either internal or external. Internal
          Links connect nodes within the same Cluster. External Links connect nodes
          within different Clusters. The allowed values and their meaning are:


          <pre>

          "internal" - Link to same cluster.

          "external" - Link to other cluster.

          </pre>

          '
        enum:
        - internal
        - external
        type: string
      transportCompressedEnabled:
        description: Enable or disable compression on the Link.
        type: boolean
      transportTlsEnabled:
        description: Enable or disable encryption on the Link.
        type: boolean
      up:
        description: Indicates whether the Link is operationally up.
        type: boolean
      uptime:
        description: The amount of time in seconds since the Link was up.
        format: int64
        type: integer
    type: object
  DmrClusterLinkChannel:
    properties:
      bridgeName:
        description: The name of the Bridge used by the Channel.
        type: string
      clientName:
        description: The name of the Client used by the Channel.
        type: string
      dmrClusterName:
        description: The name of the Cluster.
        type: string
      establisher:
        description: Indicates whether the local node established the Channel.
        type: boolean
      failureReason:
        description: The failure reason for the Channel being down.
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      queueName:
        description: The name of the Queue used by the Channel.
        type: string
      remoteAddress:
        description: The FQDN or IP address (and optional port) of the remote node.
        type: string
      remoteNodeName:
        description: The name of the node at the remote end of the Link.
        type: string
      up:
        description: Indicates whether the Channel is operationally up.
        type: boolean
      uptime:
        description: The amount of time in seconds since the Channel was up.
        format: int64
        type: integer
    type: object
  DmrClusterLinkChannelLinks:
    properties:
      uri:
        description: The URI of this DmrClusterLinkChannel object.
        type: string
    type: object
  DmrClusterLinkChannelResponse:
    properties:
      data:
        $ref: '#/definitions/DmrClusterLinkChannel'
      links:
        $ref: '#/definitions/DmrClusterLinkChannelLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  DmrClusterLinkChannelsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/DmrClusterLinkChannel'
        type: array
      links:
        items:
          $ref: '#/definitions/DmrClusterLinkChannelLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  DmrClusterLinkLinks:
    properties:
      channelsUri:
        description: The URI of this DmrClusterLink's channels collection.
        type: string
      remoteAddressesUri:
        description: The URI of this DmrClusterLink's remoteAddresses collection.
        type: string
      tlsTrustedCommonNamesUri:
        description: The URI of this DmrClusterLink's tlsTrustedCommonNames collection.
        type: string
      uri:
        description: The URI of this DmrClusterLink object.
        type: string
    type: object
  DmrClusterLinkRemoteAddress:
    properties:
      dmrClusterName:
        description: The name of the Cluster.
        type: string
      remoteAddress:
        description: 'The FQDN or IP address (and optional port) of the remote node.
          If port is not provided, it will vary based on the transport encoding: 55555
          (plain-text), 55443 (encrypted), or 55003 (compressed).'
        type: string
      remoteNodeName:
        description: The name of the node at the remote end of the Link.
        type: string
    type: object
  DmrClusterLinkRemoteAddressLinks:
    properties:
      uri:
        description: The URI of this DmrClusterLinkRemoteAddress object.
        type: string
    type: object
  DmrClusterLinkRemoteAddressResponse:
    properties:
      data:
        $ref: '#/definitions/DmrClusterLinkRemoteAddress'
      links:
        $ref: '#/definitions/DmrClusterLinkRemoteAddressLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  DmrClusterLinkRemoteAddressesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/DmrClusterLinkRemoteAddress'
        type: array
      links:
        items:
          $ref: '#/definitions/DmrClusterLinkRemoteAddressLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  DmrClusterLinkResponse:
    properties:
      data:
        $ref: '#/definitions/DmrClusterLink'
      links:
        $ref: '#/definitions/DmrClusterLinkLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  DmrClusterLinkTlsTrustedCommonName:
    properties:
      dmrClusterName:
        description: The name of the Cluster.
        type: string
      remoteNodeName:
        description: The name of the node at the remote end of the Link.
        type: string
      tlsTrustedCommonName:
        description: The expected trusted common name of the remote certificate.
        type: string
    type: object
  DmrClusterLinkTlsTrustedCommonNameLinks:
    properties:
      uri:
        description: The URI of this DmrClusterLinkTlsTrustedCommonName object.
        type: string
    type: object
  DmrClusterLinkTlsTrustedCommonNameResponse:
    properties:
      data:
        $ref: '#/definitions/DmrClusterLinkTlsTrustedCommonName'
      links:
        $ref: '#/definitions/DmrClusterLinkTlsTrustedCommonNameLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  DmrClusterLinkTlsTrustedCommonNamesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/DmrClusterLinkTlsTrustedCommonName'
        type: array
      links:
        items:
          $ref: '#/definitions/DmrClusterLinkTlsTrustedCommonNameLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  DmrClusterLinks:
    properties:
      linksUri:
        description: The URI of this DmrCluster's links collection.
        type: string
      topologyIssuesUri:
        description: The URI of this DmrCluster's topologyIssues collection.
        type: string
      uri:
        description: The URI of this DmrCluster object.
        type: string
    type: object
  DmrClusterLinksResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/DmrClusterLink'
        type: array
      links:
        items:
          $ref: '#/definitions/DmrClusterLinkLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  DmrClusterResponse:
    properties:
      data:
        $ref: '#/definitions/DmrCluster'
      links:
        $ref: '#/definitions/DmrClusterLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  DmrClusterTopologyIssue:
    properties:
      dmrClusterName:
        description: The name of the Cluster.
        type: string
      topologyIssue:
        description: The topology issue discovered in the Cluster. A topology issue
          indicates incorrect or inconsistent configuration within the DMR network.
          Such issues will cause messages to be misdelivered or lost.
        type: string
    type: object
  DmrClusterTopologyIssueLinks:
    properties:
      uri:
        description: The URI of this DmrClusterTopologyIssue object.
        type: string
    type: object
  DmrClusterTopologyIssueResponse:
    properties:
      data:
        $ref: '#/definitions/DmrClusterTopologyIssue'
      links:
        $ref: '#/definitions/DmrClusterTopologyIssueLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  DmrClusterTopologyIssuesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/DmrClusterTopologyIssue'
        type: array
      links:
        items:
          $ref: '#/definitions/DmrClusterTopologyIssueLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  DmrClustersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/DmrCluster'
        type: array
      links:
        items:
          $ref: '#/definitions/DmrClusterLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  EventThreshold:
    properties:
      clearPercent:
        description: The clear threshold for the value of this counter as percentage
          of its maximum value. Falling below this value will trigger a corresponding
          Event.
        format: int64
        type: integer
      clearValue:
        description: The clear threshold for the absolute value of this counter. Falling
          below this value will trigger a corresponding Event.
        format: int64
        type: integer
      setPercent:
        description: The set threshold for the value of this counter as percentage
          of its maximum value. Exceeding this value will trigger a corresponding
          Event.
        format: int64
        type: integer
      setValue:
        description: The set threshold for the absolute value of this counter. Exceeding
          this value will trigger a corresponding Event.
        format: int64
        type: integer
    type: object
  EventThresholdByPercent:
    properties:
      clearPercent:
        description: The clear threshold for the value of this counter as percentage
          of its maximum value. Falling below this value will trigger a corresponding
          Event.
        format: int64
        type: integer
      setPercent:
        description: The set threshold for the value of this counter as percentage
          of its maximum value. Exceeding this value will trigger a corresponding
          Event.
        format: int64
        type: integer
    type: object
  EventThresholdByValue:
    properties:
      clearValue:
        description: Threshold clear value.
        format: int64
        type: integer
      setValue:
        description: Threshold set value.
        format: int64
        type: integer
    type: object
  MsgVpn:
    properties:
      authenticationBasicEnabled:
        description: Indicates whether basic authentication is enabled for clients
          connecting to the Message VPN.
        type: boolean
      authenticationBasicProfileName:
        description: The name of the RADIUS or LDAP Profile to use for basic authentication.
        type: string
      authenticationBasicRadiusDomain:
        description: The RADIUS domain to use for basic authentication.
        type: string
      authenticationBasicType:
        description: 'The type of basic authentication to use for clients connecting
          to the Message VPN. The allowed values and their meaning are:


          <pre>

          "internal" - Internal database. Authentication is against Client Usernames.

          "ldap" - LDAP authentication. An LDAP profile name must be provided.

          "radius" - RADIUS authentication. A RADIUS profile name must be provided.

          "none" - No authentication. Anonymous login allowed.

          </pre>

          '
        enum:
        - internal
        - ldap
        - radius
        - none
        type: string
      authenticationClientCertAllowApiProvidedUsernameEnabled:
        description: Indicates whether a client is allowed to specify a Client Username
          via the API connect method. When disabled, the certificate CN (Common Name)
          is always used.
        type: boolean
      authenticationClientCertEnabled:
        description: Indicates whether client certificate authentication is enabled
          in the Message VPN.
        type: boolean
      authenticationClientCertMaxChainDepth:
        description: The maximum depth for a client certificate chain. The depth of
          a chain is defined as the number of signing CA certificates that are present
          in the chain back to a trusted self-signed root CA certificate.
        format: int64
        type: integer
      authenticationClientCertRevocationCheckMode:
        description: 'The desired behavior for client certificate revocation checking.
          The allowed values and their meaning are:


          <pre>

          "allow-all" - Allow the client to authenticate, the result of client certificate
          revocation check is ignored.

          "allow-unknown" - Allow the client to authenticate even if the revocation
          status of his certificate cannot be determined.

          "allow-valid" - Allow the client to authenticate only when the revocation
          check returned an explicit positive response.

          </pre>

          '
        enum:
        - allow-all
        - allow-unknown
        - allow-valid
        type: string
      authenticationClientCertUsernameSource:
        description: 'The field from the client certificate to use as the client username.
          The allowed values and their meaning are:


          <pre>

          "common-name" - the username is extracted from the certificate''s Common
          Name.

          "subject-alternate-name-msupn" - the username is extracted from the certificate''s
          Other Name type of the Subject Alternative Name and must have the msUPN
          signature.

          </pre>

          '
        enum:
        - common-name
        - subject-alternate-name-msupn
        type: string
      authenticationClientCertValidateDateEnabled:
        description: Indicates whether the "Not Before" and "Not After" validity dates
          in the client certificate are checked.
        type: boolean
      authenticationKerberosAllowApiProvidedUsernameEnabled:
        description: Indicates whether a client is allowed to specify a Client Username
          via the API connect method. When disabled, the Kerberos Principal name is
          always used.
        type: boolean
      authenticationKerberosEnabled:
        description: Indicates whether Kerberos authentication is enabled in the Message
          VPN.
        type: boolean
      authorizationLdapGroupMembershipAttributeName:
        description: The name of the attribute that is retrieved from the LDAP server
          as part of the LDAP search when authorizing a client connecting to the Message
          VPN.
        type: string
      authorizationProfileName:
        description: The name of the LDAP Profile to use for client authorization.
        type: string
      authorizationType:
        description: 'The type of authorization to use for clients connecting to the
          Message VPN. The allowed values and their meaning are:


          <pre>

          "ldap" - LDAP authorization.

          "internal" - Internal authorization.

          </pre>

          '
        enum:
        - ldap
        - internal
        type: string
      bridgingTlsServerCertEnforceTrustedCommonNameEnabled:
        description: Indicates whether the Common Name (CN) in the server certificate
          from the remote broker is validated for the Bridge.
        type: boolean
      bridgingTlsServerCertMaxChainDepth:
        description: The maximum depth for a server certificate chain. The depth of
          a chain is defined as the number of signing CA certificates that are present
          in the chain back to a trusted self-signed root CA certificate.
        format: int64
        type: integer
      bridgingTlsServerCertValidateDateEnabled:
        description: Indicates whether the "Not Before" and "Not After" validity dates
          in the server certificate are checked.
        type: boolean
      counter:
        $ref: '#/definitions/MsgVpnCounter'
      distributedCacheManagementEnabled:
        description: Indicates whether managing of cache instances over the message
          bus is enabled in the Message VPN.
        type: boolean
      dmrEnabled:
        description: Enable or disable Dynamic Message Routing (DMR) for the Message
          VPN.
        type: boolean
      enabled:
        description: Indicates whether the Message VPN is enabled.
        type: boolean
      eventConnectionCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventEgressFlowCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventEgressMsgRateThreshold:
        $ref: '#/definitions/EventThresholdByValue'
      eventEndpointCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventIngressFlowCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventIngressMsgRateThreshold:
        $ref: '#/definitions/EventThresholdByValue'
      eventLargeMsgThreshold:
        description: Exceeding this message size in kilobytes (KB) triggers a corresponding
          Event in the Message VPN.
        format: int64
        type: integer
      eventLogTag:
        description: The value of the prefix applied to all published Events in the
          Message VPN.
        type: string
      eventMsgSpoolUsageThreshold:
        $ref: '#/definitions/EventThreshold'
      eventPublishClientEnabled:
        description: Indicates whether client Events are published in the Message
          VPN.
        type: boolean
      eventPublishMsgVpnEnabled:
        description: Indicates whether Message VPN Events are published in the Message
          VPN.
        type: boolean
      eventPublishSubscriptionMode:
        description: 'The mode of subscription Events published in the Message VPN.
          The allowed values and their meaning are:


          <pre>

          "off" - Disable client level event message publishing.

          "on-with-format-v1" - Enable client level event message publishing with
          format v1.

          "on-with-no-unsubscribe-events-on-disconnect-format-v1" - As "on-with-format-v1",
          but unsubscribe events are not generated when a client disconnects. Unsubscribe
          events are still raised when a client explicitly unsubscribes from its subscriptions.

          "on-with-format-v2" - Enable client level event message publishing with
          format v2.

          "on-with-no-unsubscribe-events-on-disconnect-format-v2" - As "on-with-format-v2",
          but unsubscribe events are not generated when a client disconnects. Unsubscribe
          events are still raised when a client explicitly unsubscribes from its subscriptions.

          </pre>

          '
        enum:
        - 'off'
        - on-with-format-v1
        - on-with-no-unsubscribe-events-on-disconnect-format-v1
        - on-with-format-v2
        - on-with-no-unsubscribe-events-on-disconnect-format-v2
        type: string
      eventPublishTopicFormatMqttEnabled:
        description: Indicates whether Message VPN Events are published in the MQTT
          format.
        type: boolean
      eventPublishTopicFormatSmfEnabled:
        description: Indicates whether Message VPN Events are published in the SMF
          format.
        type: boolean
      eventServiceAmqpConnectionCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventServiceMqttConnectionCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventServiceRestIncomingConnectionCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventServiceSmfConnectionCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventServiceWebConnectionCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventSubscriptionCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventTransactedSessionCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventTransactionCountThreshold:
        $ref: '#/definitions/EventThreshold'
      exportSubscriptionsEnabled:
        description: Indicates whether exports of subscriptions to other routers in
          the network over neighbour links is enabled in the Message VPN.
        type: boolean
      failureReason:
        description: 'The reason for the Message VPN failure as: Message VPN Disabled,
          Internal Client Not Ready, or Cluster Subscription Sync Pending.'
        type: string
      jndiEnabled:
        description: Indicates whether the JNDI access for clients is enabled in the
          Message VPN.
        type: boolean
      maxConnectionCount:
        description: The maximum number of client connections to the Message VPN.
        format: int64
        type: integer
      maxEffectiveEndpointCount:
        description: The effective maximum number of Queues and Topic Endpoints allowed
          in the Message VPN.
        format: int32
        type: integer
      maxEffectiveRxFlowCount:
        description: The effective maximum number of receive flows allowed in the
          Message VPN.
        format: int32
        type: integer
      maxEffectiveSubscriptionCount:
        description: The effective maximum number of subscriptions allowed in the
          Message VPN.
        format: int64
        type: integer
      maxEffectiveTransactedSessionCount:
        description: The effective maximum number of transacted sessions allowed in
          the Message VPN.
        format: int32
        type: integer
      maxEffectiveTransactionCount:
        description: The effective maximum number of transactions allowed in the Message
          VPN.
        format: int32
        type: integer
      maxEffectiveTxFlowCount:
        description: The effective maximum number of transmit flows allowed in the
          Message VPN.
        format: int32
        type: integer
      maxEgressFlowCount:
        description: The maximum number of transmit flows that can be created in the
          Message VPN.
        format: int64
        type: integer
      maxEndpointCount:
        description: The maximum number of Queues and Topic Endpoints that can be
          created in the Message VPN.
        format: int64
        type: integer
      maxIngressFlowCount:
        description: The maximum number of receive flows that can be created in the
          Message VPN.
        format: int64
        type: integer
      maxMsgSpoolUsage:
        description: The maximum message spool usage by the Message VPN, in megabytes.
        format: int64
        type: integer
      maxSubscriptionCount:
        description: The maximum number of local client subscriptions (both primary
          and backup) that can be added to the Message VPN.
        format: int64
        type: integer
      maxTransactedSessionCount:
        description: The maximum number of transacted sessions that can be created
          in the Message VPN.
        format: int64
        type: integer
      maxTransactionCount:
        description: The maximum number of transactions that can be created in the
          Message VPN.
        format: int64
        type: integer
      mqttRetainMaxMemory:
        description: 'The maximum total memory usage of the MQTT Retain feature for
          this Message VPN, in MB. If the maximum memory is reached, any arriving
          retain messages that require more memory are discarded.


          A value of -1 indicates that the memory is bounded only by the global max
          memory limit. A value of 0 prevents MQTT Retain from becoming operational.'
        format: int32
        type: integer
      msgReplayActiveCount:
        description: The number of message replays that are currently active in the
          Message VPN.
        format: int32
        type: integer
      msgReplayFailedCount:
        description: The number of message replays that are currently failed in the
          Message VPN.
        format: int32
        type: integer
      msgReplayInitializingCount:
        description: The number of message replays that are currently initializing
          in the Message VPN.
        format: int32
        type: integer
      msgReplayPendingCompleteCount:
        description: The number of message replays that are pending complete in the
          Message VPN.
        format: int32
        type: integer
      msgSpoolUsage:
        description: The current message spool usage by the Message VPN, in bytes
          (B).
        format: int64
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      rate:
        $ref: '#/definitions/MsgVpnRate'
      restTlsServerCertEnforceTrustedCommonNameEnabled:
        description: Indicates whether the Common Name (CN) in the server certificate
          from the remote REST Consumer is validated.
        type: boolean
      restTlsServerCertMaxChainDepth:
        description: The maximum depth for a REST Consumer server certificate chain.
          The depth of a chain is defined as the number of signing CA certificates
          that are present in the chain back to a trusted self-signed root CA certificate.
        format: int64
        type: integer
      restTlsServerCertValidateDateEnabled:
        description: Indicates whether the "Not Before" and "Not After" validity dates
          in the REST Consumer server certificate are checked.
        type: boolean
      sempOverMsgBusAdminClientEnabled:
        description: Indicates whether the "admin" level "client" commands are enabled
          for SEMP over the message bus in the Message VPN.
        type: boolean
      sempOverMsgBusAdminDistributedCacheEnabled:
        description: Indicates whether the "admin" level "Distributed Cache" commands
          are enabled for SEMP over the message bus in the Message VPN.
        type: boolean
      sempOverMsgBusAdminEnabled:
        description: Indicates whether the "admin" level commands are enabled for
          SEMP over the message bus in the Message VPN.
        type: boolean
      sempOverMsgBusEnabled:
        description: Indicates whether SEMP over the message bus is enabled in the
          Message VPN.
        type: boolean
      sempOverMsgBusShowEnabled:
        description: Indicates whether the "show" level commands are enabled for SEMP
          over the message bus in the Message VPN.
        type: boolean
      serviceAmqpMaxConnectionCount:
        description: The maximum number of AMQP client connections that can be simultaneously
          connected to the Message VPN. This value may be higher than supported by
          the platform.
        format: int64
        type: integer
      serviceAmqpPlainTextCompressed:
        description: Indicates whether the AMQP Service is compressed in the Message
          VPN.
        type: boolean
      serviceAmqpPlainTextEnabled:
        description: Indicates whether the AMQP Service is enabled in the Message
          VPN.
        type: boolean
      serviceAmqpPlainTextFailureReason:
        description: The reason for the AMQP Service failure in the Message VPN.
        type: string
      serviceAmqpPlainTextListenPort:
        description: The port number for plain-text AMQP clients that connect to the
          Message VPN.
        format: int64
        type: integer
      serviceAmqpPlainTextUp:
        description: Indicates whether the AMQP Service is operationally up in the
          Message VPN.
        type: boolean
      serviceAmqpTlsCompressed:
        description: Indicates whether the TLS related AMQP Service is compressed
          in the Message VPN.
        type: boolean
      serviceAmqpTlsEnabled:
        description: Indicates whether TLS is enabled for AMQP clients in the Message
          VPN.
        type: boolean
      serviceAmqpTlsFailureReason:
        description: The reason for the TLS related AMQP Service failure in the Message
          VPN.
        type: string
      serviceAmqpTlsListenPort:
        description: The port number for AMQP clients that connect to the Message
          VPN over TLS.
        format: int64
        type: integer
      serviceAmqpTlsUp:
        description: Indicates whether the TLS related AMQP Service is operationally
          up in the Message VPN.
        type: boolean
      serviceMqttMaxConnectionCount:
        description: The maximum number of MQTT client connections that can be simultaneously
          connected to the Message VPN.
        format: int64
        type: integer
      serviceMqttPlainTextCompressed:
        description: Indicates whether the MQTT Service is compressed in the Message
          VPN.
        type: boolean
      serviceMqttPlainTextEnabled:
        description: Indicates whether the MQTT Service is enabled in the Message
          VPN.
        type: boolean
      serviceMqttPlainTextFailureReason:
        description: The reason for the MQTT Service failure in the Message VPN.
        type: string
      serviceMqttPlainTextListenPort:
        description: The port number for plain-text MQTT clients that connect to the
          Message VPN.
        format: int64
        type: integer
      serviceMqttPlainTextUp:
        description: Indicates whether the MQTT Service is operationally up in the
          Message VPN.
        type: boolean
      serviceMqttTlsCompressed:
        description: Indicates whether the TLS related MQTT Service is compressed
          in the Message VPN.
        type: boolean
      serviceMqttTlsEnabled:
        description: Indicates whether TLS is enabled for MQTT clients in the Message
          VPN.
        type: boolean
      serviceMqttTlsFailureReason:
        description: The reason for the TLS related MQTT Service failure in the Message
          VPN.
        type: string
      serviceMqttTlsListenPort:
        description: The port number for MQTT clients that connect to the Message
          VPN over TLS.
        format: int64
        type: integer
      serviceMqttTlsUp:
        description: Indicates whether the TLS related MQTT Service is operationally
          up in the Message VPN.
        type: boolean
      serviceMqttTlsWebSocketCompressed:
        description: Indicates whether the TLS related Web transport MQTT Service
          is compressed in the Message VPN.
        type: boolean
      serviceMqttTlsWebSocketEnabled:
        description: Indicates whether TLS is enabled for MQTT Web clients in the
          Message VPN.
        type: boolean
      serviceMqttTlsWebSocketFailureReason:
        description: The reason for the TLS related Web transport MQTT Service failure
          in the Message VPN.
        type: string
      serviceMqttTlsWebSocketListenPort:
        description: The port number for MQTT clients that connect to the Message
          VPN using WebSocket over TLS.
        format: int64
        type: integer
      serviceMqttTlsWebSocketUp:
        description: Indicates whether the TLS related Web transport MQTT Service
          is operationally up in the Message VPN.
        type: boolean
      serviceMqttWebSocketCompressed:
        description: Indicates whether the Web transport related MQTT Service is compressed
          in the Message VPN.
        type: boolean
      serviceMqttWebSocketEnabled:
        description: Indicates whether the Web transport for the SMF Service is enabled
          in the Message VPN.
        type: boolean
      serviceMqttWebSocketFailureReason:
        description: The reason for the Web transport related MQTT Service failure
          in the Message VPN.
        type: string
      serviceMqttWebSocketListenPort:
        description: The port number for plain-text MQTT clients that connect to the
          Message VPN using WebSocket.
        format: int64
        type: integer
      serviceMqttWebSocketUp:
        description: Indicates whether the Web transport related MQTT Service is operationally
          up in the Message VPN.
        type: boolean
      serviceRestIncomingMaxConnectionCount:
        description: The maximum number of REST incoming client connections that can
          be simultaneously connected to the Message VPN. This value may be higher
          than supported by the platform.
        format: int64
        type: integer
      serviceRestIncomingPlainTextCompressed:
        description: Indicates whether the incoming REST Service is compressed in
          the Message VPN.
        type: boolean
      serviceRestIncomingPlainTextEnabled:
        description: Indicates whether the REST Service is enabled in the Message
          VPN for incoming clients.
        type: boolean
      serviceRestIncomingPlainTextFailureReason:
        description: The reason for the incoming REST Service failure in the Message
          VPN.
        type: string
      serviceRestIncomingPlainTextListenPort:
        description: The port number for incoming plain-text REST clients that connect
          to the Message VPN.
        format: int64
        type: integer
      serviceRestIncomingPlainTextUp:
        description: Indicates whether the incoming REST Service is operationally
          up in the Message VPN.
        type: boolean
      serviceRestIncomingTlsCompressed:
        description: Indicates whether the TLS related incoming REST Service is compressed
          in the Message VPN.
        type: boolean
      serviceRestIncomingTlsEnabled:
        description: Indicates whether TLS is enabled for incoming REST clients in
          the Message VPN.
        type: boolean
      serviceRestIncomingTlsFailureReason:
        description: The reason for the TLS related incoming REST Service failure
          in the Message VPN.
        type: string
      serviceRestIncomingTlsListenPort:
        description: The port number for incoming REST clients that connect to the
          Message VPN over TLS.
        format: int64
        type: integer
      serviceRestIncomingTlsUp:
        description: Indicates whether the TLS related incoming REST Service is operationally
          up in the Message VPN.
        type: boolean
      serviceRestMode:
        description: 'The REST service mode for incoming REST clients that connect
          to the Message VPN. The allowed values and their meaning are:


          <pre>

          "gateway" - Act as a message gateway through which REST messages are propagated.

          "messaging" - Act as a message router on which REST messages are queued.

          </pre>

          '
        enum:
        - gateway
        - messaging
        type: string
      serviceRestOutgoingMaxConnectionCount:
        description: The maximum number of REST Consumer (outgoing) client connections
          that can be simultaneously connected to the Message VPN.
        format: int64
        type: integer
      serviceSmfMaxConnectionCount:
        description: The maximum number of SMF client connections that can be simultaneously
          connected to the Message VPN. This value may be higher than supported by
          the platform.
        format: int64
        type: integer
      serviceSmfPlainTextEnabled:
        description: Indicates whether the SMF Service is enabled in the Message VPN.
        type: boolean
      serviceSmfPlainTextFailureReason:
        description: The reason for the SMF Service failure in the Message VPN.
        type: string
      serviceSmfPlainTextUp:
        description: Indicates whether the SMF Service is operationally up in the
          Message VPN.
        type: boolean
      serviceSmfTlsEnabled:
        description: Indicates whether TLS is enabled for SMF clients in the Message
          VPN.
        type: boolean
      serviceSmfTlsFailureReason:
        description: The reason for the TLS related SMF Service failure in the Message
          VPN.
        type: string
      serviceSmfTlsUp:
        description: Indicates whether the TLS related SMF Service is operationally
          up in the Message VPN.
        type: boolean
      serviceWebMaxConnectionCount:
        description: The maximum number of Web Transport client connections that can
          be simultaneously connected to the Message VPN. This value may be higher
          than supported by the platform.
        format: int64
        type: integer
      serviceWebPlainTextEnabled:
        description: Indicates whether the Web transport for the SMF Service is enabled
          in the Message VPN.
        type: boolean
      serviceWebPlainTextFailureReason:
        description: The reason for the Web transport related SMF Service failure
          in the Message VPN.
        type: string
      serviceWebPlainTextUp:
        description: Indicates whether the Web transport for the SMF Service is operationally
          up in the Message VPN.
        type: boolean
      serviceWebTlsEnabled:
        description: Indicates whether TLS is enabled for SMF clients in the Message
          VPN that use the Web transport.
        type: boolean
      serviceWebTlsFailureReason:
        description: The reason for the TLS related Web transport SMF Service failure
          in the Message VPN.
        type: string
      serviceWebTlsUp:
        description: Indicates whether the TLS related Web transport SMF Service is
          operationally up in the Message VPN.
        type: boolean
      state:
        description: 'The operational state of the local Message VPN as: up, down
          or standby.'
        type: string
      subscriptionExportProgress:
        description: The progress of the subscription export task, in percent complete.
        format: int64
        type: integer
      systemManager:
        description: Indicates whether the Message VPN is the system manager for handling
          system level SEMP get requests and system level event publishing.
        type: boolean
      tlsAllowDowngradeToPlainTextEnabled:
        description: Indicates whether SMF clients connected to the Message VPN are
          allowed to downgrade their connections from TLS to plain text.
        type: boolean
    type: object
  MsgVpnAclProfile:
    properties:
      aclProfileName:
        description: The name of the ACL Profile.
        type: string
      clientConnectDefaultAction:
        description: 'The default action to take when a client using the ACL Profile
          connects to the Message VPN. The allowed values and their meaning are:


          <pre>

          "allow" - Allow client connection unless an exception is found for it.

          "disallow" - Disallow client connection unless an exception is found for
          it.

          </pre>

          '
        enum:
        - allow
        - disallow
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      publishTopicDefaultAction:
        description: 'The default action to take when a client using the ACL Profile
          publishes to a topic in the Message VPN. The allowed values and their meaning
          are:


          <pre>

          "allow" - Allow topic unless an exception is found for it.

          "disallow" - Disallow topic unless an exception is found for it.

          </pre>

          '
        enum:
        - allow
        - disallow
        type: string
      subscribeTopicDefaultAction:
        description: 'The default action to take when a client using the ACL Profile
          subscribes to a topic in the Message VPN. The allowed values and their meaning
          are:


          <pre>

          "allow" - Allow topic unless an exception is found for it.

          "disallow" - Disallow topic unless an exception is found for it.

          </pre>

          '
        enum:
        - allow
        - disallow
        type: string
    type: object
  MsgVpnAclProfileClientConnectException:
    properties:
      aclProfileName:
        description: The name of the ACL Profile.
        type: string
      clientConnectExceptionAddress:
        description: The IP address/netmask of the client connect exception in CIDR
          form.
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
    type: object
  MsgVpnAclProfileClientConnectExceptionLinks:
    properties:
      uri:
        description: The URI of this MsgVpnAclProfileClientConnectException object.
        type: string
    type: object
  MsgVpnAclProfileClientConnectExceptionResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnAclProfileClientConnectException'
      links:
        $ref: '#/definitions/MsgVpnAclProfileClientConnectExceptionLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnAclProfileClientConnectExceptionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnAclProfileClientConnectException'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnAclProfileClientConnectExceptionLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnAclProfileLinks:
    properties:
      clientConnectExceptionsUri:
        description: The URI of this MsgVpnAclProfile's clientConnectExceptions collection.
        type: string
      publishExceptionsUri:
        description: The URI of this MsgVpnAclProfile's publishExceptions collection.
        type: string
      subscribeExceptionsUri:
        description: The URI of this MsgVpnAclProfile's subscribeExceptions collection.
        type: string
      uri:
        description: The URI of this MsgVpnAclProfile object.
        type: string
    type: object
  MsgVpnAclProfilePublishException:
    properties:
      aclProfileName:
        description: The name of the ACL Profile.
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      publishExceptionTopic:
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        type: string
      topicSyntax:
        description: 'The syntax of the topic for the exception to the default action
          taken. The allowed values and their meaning are:


          <pre>

          "smf" - Topic uses SMF syntax.

          "mqtt" - Topic uses MQTT syntax.

          </pre>

          '
        enum:
        - smf
        - mqtt
        type: string
    type: object
  MsgVpnAclProfilePublishExceptionLinks:
    properties:
      uri:
        description: The URI of this MsgVpnAclProfilePublishException object.
        type: string
    type: object
  MsgVpnAclProfilePublishExceptionResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnAclProfilePublishException'
      links:
        $ref: '#/definitions/MsgVpnAclProfilePublishExceptionLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnAclProfilePublishExceptionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnAclProfilePublishException'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnAclProfilePublishExceptionLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnAclProfileResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnAclProfile'
      links:
        $ref: '#/definitions/MsgVpnAclProfileLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnAclProfileSubscribeException:
    properties:
      aclProfileName:
        description: The name of the ACL Profile.
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      subscribeExceptionTopic:
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        type: string
      topicSyntax:
        description: 'The syntax of the topic for the exception to the default action
          taken. The allowed values and their meaning are:


          <pre>

          "smf" - Topic uses SMF syntax.

          "mqtt" - Topic uses MQTT syntax.

          </pre>

          '
        enum:
        - smf
        - mqtt
        type: string
    type: object
  MsgVpnAclProfileSubscribeExceptionLinks:
    properties:
      uri:
        description: The URI of this MsgVpnAclProfileSubscribeException object.
        type: string
    type: object
  MsgVpnAclProfileSubscribeExceptionResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnAclProfileSubscribeException'
      links:
        $ref: '#/definitions/MsgVpnAclProfileSubscribeExceptionLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnAclProfileSubscribeExceptionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnAclProfileSubscribeException'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnAclProfileSubscribeExceptionLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnAclProfilesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnAclProfile'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnAclProfileLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnAuthorizationGroup:
    properties:
      aclProfileName:
        description: The ACL Profile of the LDAP Authorization Group.
        type: string
      authorizationGroupName:
        description: The name of the LDAP Authorization Group.
        type: string
      clientProfileName:
        description: The Client Profile of the LDAP Authorization Group.
        type: string
      enabled:
        description: Indicates whether the LDAP Authorization Group is enabled.
        type: boolean
      msgVpnName:
        description: The name of the Message VPN.
        type: string
    type: object
  MsgVpnAuthorizationGroupLinks:
    properties:
      uri:
        description: The URI of this MsgVpnAuthorizationGroup object.
        type: string
    type: object
  MsgVpnAuthorizationGroupResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnAuthorizationGroup'
      links:
        $ref: '#/definitions/MsgVpnAuthorizationGroupLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnAuthorizationGroupsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnAuthorizationGroup'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnAuthorizationGroupLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnBridge:
    properties:
      boundToQueue:
        description: Indicates whether the Bridge is bound to the queue in the remote
          Message VPN.
        type: boolean
      bridgeName:
        description: The name of the Bridge.
        type: string
      bridgeVirtualRouter:
        description: 'The virtual router of the Bridge. The allowed values and their
          meaning are:


          <pre>

          "primary" - The Bridge is used for the primary virtual router.

          "backup" - The Bridge is used for the backup virtual router.

          "auto" - The Bridge is automatically assigned a router.

          </pre>

          '
        enum:
        - primary
        - backup
        - auto
        type: string
      clientName:
        description: The name of the Client for the Bridge.
        type: string
      compressed:
        description: Indicates whether messages transmitted over the Bridge are compressed.
        type: boolean
      counter:
        $ref: '#/definitions/MsgVpnBridgeCounter'
      enabled:
        description: Indicates whether the Bridge is enabled.
        type: boolean
      encrypted:
        description: Indicates whether messages transmitted over the Bridge are encrypted
          with TLS.
        type: boolean
      establisher:
        description: 'The establisher of the Bridge connection as: local or remote.'
        type: string
      inboundFailureReason:
        description: The reason for the inbound connection failure from the Bridge.
        type: string
      inboundState:
        description: The state of the inbound connection from the Bridge.
        type: string
      lastTxMsgId:
        description: The ID of the last message transmitted to the Bridge.
        format: int64
        type: integer
      localInterface:
        description: The physical interface on the local Message VPN host for connecting
          to the remote Message VPN.
        type: string
      localQueueName:
        description: The name of the local queue for the Bridge.
        type: string
      maxTtl:
        description: The maximum time-to-live (TTL) in hops. Messages are discarded
          if their TTL exceeds this value.
        format: int64
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      outboundState:
        description: The state of the outbound connection to the Bridge.
        type: string
      rate:
        $ref: '#/definitions/MsgVpnBridgeRate'
      remoteAddress:
        description: The FQDN or IP address of the remote Message VPN.
        type: string
      remoteAuthenticationBasicClientUsername:
        description: The Client Username the Bridge uses to login to the remote Message
          VPN.
        type: string
      remoteAuthenticationScheme:
        description: 'The authentication scheme for the remote Message VPN. The allowed
          values and their meaning are:


          <pre>

          "basic" - Basic Authentication Scheme (via username and password).

          "client-certificate" - Client Certificate Authentication Scheme (via certificate
          file or content).

          </pre>

          '
        enum:
        - basic
        - client-certificate
        type: string
      remoteConnectionRetryCount:
        description: The maximum number of retry attempts to establish a connection
          to the remote Message VPN. A value of 0 means to retry forever.
        format: int64
        type: integer
      remoteConnectionRetryDelay:
        description: The number of seconds to delay before retrying to connect to
          the remote Message VPN.
        format: int64
        type: integer
      remoteDeliverToOnePriority:
        description: 'The priority for deliver-to-one (DTO) messages transmitted from
          the remote Message VPN. The allowed values and their meaning are:


          <pre>

          "p1" - Priority 1 (highest).

          "p2" - Priority 2.

          "p3" - Priority 3.

          "p4" - Priority 4 (lowest).

          "da" - Deliver Always.

          </pre>

          '
        enum:
        - p1
        - p2
        - p3
        - p4
        - da
        type: string
      remoteMsgVpnName:
        description: The name of the remote Message VPN.
        type: string
      remoteRouterName:
        description: The name of the remote router.
        type: string
      remoteTxFlowId:
        description: The ID of the transmit flow for the connected remote Message
          VPN.
        format: int32
        type: integer
      tlsCipherSuiteList:
        description: The colon-separated list of cipher-suites supported for TLS connections
          to the remote Message VPN. The value "default" implies all supported suites
          ordered from most secure to least secure.
        type: string
      tlsDefaultCipherSuiteList:
        description: Indicates whether the Bridge is configured to use the default
          cipher-suite list.
        type: boolean
      ttlExceededEventRaised:
        description: Indicates whether the TTL (hops) exceeded event has been raised.
        type: boolean
      uptime:
        description: The amount of time in seconds since the Bridge connected to the
          remote Message VPN.
        format: int64
        type: integer
    type: object
  MsgVpnBridgeCounter:
    properties:
      controlRxByteCount:
        description: The amount of client control messages received from the Bridge,
          in bytes (B).
        format: int64
        type: integer
      controlRxMsgCount:
        description: The number of client control messages received from the Bridge.
        format: int64
        type: integer
      controlTxByteCount:
        description: The amount of client control messages transmitted to the Bridge,
          in bytes (B).
        format: int64
        type: integer
      controlTxMsgCount:
        description: The number of client control messages transmitted to the Bridge.
        format: int64
        type: integer
      dataRxByteCount:
        description: The amount of client data messages received from the Bridge,
          in bytes (B).
        format: int64
        type: integer
      dataRxMsgCount:
        description: The number of client data messages received from the Bridge.
        format: int64
        type: integer
      dataTxByteCount:
        description: The amount of client data messages transmitted to the Bridge,
          in bytes (B).
        format: int64
        type: integer
      dataTxMsgCount:
        description: The number of client data messages transmitted to the Bridge.
        format: int64
        type: integer
      discardedRxMsgCount:
        description: The number of messages discarded during reception from the Bridge.
        format: int32
        type: integer
      discardedTxMsgCount:
        description: The number of messages discarded during transmission to the Bridge.
        format: int32
        type: integer
      loginRxMsgCount:
        description: The number of login request messages received from the Bridge.
        format: int64
        type: integer
      loginTxMsgCount:
        description: The number of login response messages transmitted to the Bridge.
        format: int64
        type: integer
      msgSpoolRxMsgCount:
        description: The number of guaranteed messages received from the Bridge.
        format: int64
        type: integer
      rxByteCount:
        description: The amount of messages received from the Bridge, in bytes (B).
        format: int64
        type: integer
      rxMsgCount:
        description: The number of messages received from the Bridge.
        format: int32
        type: integer
      txByteCount:
        description: The amount of messages transmitted to the Bridge, in bytes (B).
        format: int64
        type: integer
      txMsgCount:
        description: The number of messages transmitted to the Bridge.
        format: int64
        type: integer
    type: object
  MsgVpnBridgeLinks:
    properties:
      localSubscriptionsUri:
        description: The URI of this MsgVpnBridge's localSubscriptions collection.
        type: string
      remoteMsgVpnsUri:
        description: The URI of this MsgVpnBridge's remoteMsgVpns collection.
        type: string
      remoteSubscriptionsUri:
        description: The URI of this MsgVpnBridge's remoteSubscriptions collection.
        type: string
      tlsTrustedCommonNamesUri:
        description: The URI of this MsgVpnBridge's tlsTrustedCommonNames collection.
        type: string
      uri:
        description: The URI of this MsgVpnBridge object.
        type: string
    type: object
  MsgVpnBridgeLocalSubscription:
    properties:
      bridgeName:
        description: The name of the Bridge.
        type: string
      bridgeVirtualRouter:
        description: 'The virtual router of the Bridge. The allowed values and their
          meaning are:


          <pre>

          "primary" - The Bridge is used for the primary virtual router.

          "backup" - The Bridge is used for the backup virtual router.

          "auto" - The Bridge is automatically assigned a router.

          </pre>

          '
        enum:
        - primary
        - backup
        - auto
        type: string
      dtoPriority:
        description: The priority of the Bridge local subscription topic for receiving
          deliver-to-one (DTO) messages.
        type: string
      localSubscriptionTopic:
        description: The topic of the Bridge local subscription.
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
    type: object
  MsgVpnBridgeLocalSubscriptionLinks:
    properties:
      uri:
        description: The URI of this MsgVpnBridgeLocalSubscription object.
        type: string
    type: object
  MsgVpnBridgeLocalSubscriptionResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnBridgeLocalSubscription'
      links:
        $ref: '#/definitions/MsgVpnBridgeLocalSubscriptionLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnBridgeLocalSubscriptionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnBridgeLocalSubscription'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnBridgeLocalSubscriptionLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnBridgeRate:
    properties:
      averageRxByteRate:
        description: The one minute average of the message rate received from the
          Bridge, in bytes per second (B/sec).
        format: int64
        type: integer
      averageRxMsgRate:
        description: The one minute average of the message rate received from the
          Bridge, in messages per second (msg/sec).
        format: int64
        type: integer
      averageTxByteRate:
        description: The one minute average of the message rate transmitted to the
          Bridge, in bytes per second (B/sec).
        format: int64
        type: integer
      averageTxMsgRate:
        description: The one minute average of the message rate transmitted to the
          Bridge, in messages per second (msg/sec).
        format: int64
        type: integer
      rxByteRate:
        description: The current message rate received from the Bridge, in bytes per
          second (B/sec).
        format: int64
        type: integer
      rxMsgRate:
        description: The current message rate received from the Bridge, in messages
          per second (msg/sec).
        format: int64
        type: integer
      txByteRate:
        description: The current message rate transmitted to the Bridge, in bytes
          per second (B/sec).
        format: int64
        type: integer
      txMsgRate:
        description: The current message rate transmitted to the Bridge, in messages
          per second (msg/sec).
        format: int64
        type: integer
    type: object
  MsgVpnBridgeRemoteMsgVpn:
    properties:
      boundToQueue:
        description: Indicates whether the Bridge is bound to the queue in the remote
          Message VPN.
        type: boolean
      bridgeName:
        description: The name of the Bridge.
        type: string
      bridgeVirtualRouter:
        description: 'The virtual router of the Bridge. The allowed values and their
          meaning are:


          <pre>

          "primary" - The Bridge is used for the primary virtual router.

          "backup" - The Bridge is used for the backup virtual router.

          "auto" - The Bridge is automatically assigned a router.

          </pre>

          '
        enum:
        - primary
        - backup
        - auto
        type: string
      clientUsername:
        description: The Client Username the Bridge uses to login to the remote Message
          VPN. This per remote Message VPN value overrides the value provided for
          the Bridge overall.
        type: string
      compressedDataEnabled:
        description: Indicates whether data compression is enabled for the remote
          Message VPN connection.
        type: boolean
      connectOrder:
        description: The preference given to incoming connections from remote Message
          VPN hosts, from 1 (highest priority) to 4 (lowest priority).
        format: int32
        type: integer
      egressFlowWindowSize:
        description: The number of outstanding guaranteed messages that can be transmitted
          over the remote Message VPN connection before an acknowledgement is received.
        format: int64
        type: integer
      enabled:
        description: Indicates whether the remote Message VPN is enabled.
        type: boolean
      lastConnectionFailureReason:
        description: The reason for the last connection failure to the remote Message
          VPN.
        type: string
      lastQueueBindFailureReason:
        description: The reason for the last queue bind failure in the remote Message
          VPN.
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      queueBinding:
        description: The queue binding of the Bridge in the remote Message VPN.
        type: string
      queueBoundUptime:
        description: The amount of time in seconds since the queue was bound in the
          remote Message VPN.
        format: int32
        type: integer
      remoteMsgVpnInterface:
        description: The physical interface on the local Message VPN host for connecting
          to the remote Message VPN. By default, an interface is chosen automatically
          (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual
          router-name.
        type: string
      remoteMsgVpnLocation:
        description: The location of the remote Message VPN as either an FQDN with
          port, IP address with port, or virtual router-name (starts with "v:").
        type: string
      remoteMsgVpnName:
        description: The name of the remote Message VPN.
        type: string
      tlsEnabled:
        description: Indicates whether TLS encryption is enabled for the remote Message
          VPN connection.
        type: boolean
      unidirectionalClientProfile:
        description: The Client Profile for the unidirectional Bridge of the remote
          Message VPN. The Client Profile must exist in the local Message VPN, and
          it is used only for the TCP parameters.
        type: string
      up:
        description: Indicates whether the connection to the remote Message VPN is
          up.
        type: boolean
    type: object
  MsgVpnBridgeRemoteMsgVpnLinks:
    properties:
      uri:
        description: The URI of this MsgVpnBridgeRemoteMsgVpn object.
        type: string
    type: object
  MsgVpnBridgeRemoteMsgVpnResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnBridgeRemoteMsgVpn'
      links:
        $ref: '#/definitions/MsgVpnBridgeRemoteMsgVpnLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnBridgeRemoteMsgVpnsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnBridgeRemoteMsgVpn'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnBridgeRemoteMsgVpnLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnBridgeRemoteSubscription:
    properties:
      bridgeName:
        description: The name of the Bridge.
        type: string
      bridgeVirtualRouter:
        description: 'The virtual router of the Bridge. The allowed values and their
          meaning are:


          <pre>

          "primary" - The Bridge is used for the primary virtual router.

          "backup" - The Bridge is used for the backup virtual router.

          "auto" - The Bridge is automatically assigned a router.

          </pre>

          '
        enum:
        - primary
        - backup
        - auto
        type: string
      deliverAlwaysEnabled:
        description: Enable deliver-always for the Bridge remote subscription topic
          instead of a deliver-to-one remote priority. A given topic for the Bridge
          may be deliver-to-one or deliver-always but not both.
        type: boolean
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      remoteSubscriptionTopic:
        description: The topic of the Bridge remote subscription.
        type: string
    type: object
  MsgVpnBridgeRemoteSubscriptionLinks:
    properties:
      uri:
        description: The URI of this MsgVpnBridgeRemoteSubscription object.
        type: string
    type: object
  MsgVpnBridgeRemoteSubscriptionResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnBridgeRemoteSubscription'
      links:
        $ref: '#/definitions/MsgVpnBridgeRemoteSubscriptionLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnBridgeRemoteSubscriptionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnBridgeRemoteSubscription'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnBridgeRemoteSubscriptionLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnBridgeResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnBridge'
      links:
        $ref: '#/definitions/MsgVpnBridgeLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnBridgeTlsTrustedCommonName:
    properties:
      bridgeName:
        description: The name of the Bridge.
        type: string
      bridgeVirtualRouter:
        description: 'The virtual router of the Bridge. The allowed values and their
          meaning are:


          <pre>

          "primary" - The Bridge is used for the primary virtual router.

          "backup" - The Bridge is used for the backup virtual router.

          "auto" - The Bridge is automatically assigned a router.

          </pre>

          '
        enum:
        - primary
        - backup
        - auto
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      tlsTrustedCommonName:
        description: The expected trusted common name of the remote certificate.
        type: string
    type: object
  MsgVpnBridgeTlsTrustedCommonNameLinks:
    properties:
      uri:
        description: The URI of this MsgVpnBridgeTlsTrustedCommonName object.
        type: string
    type: object
  MsgVpnBridgeTlsTrustedCommonNameResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnBridgeTlsTrustedCommonName'
      links:
        $ref: '#/definitions/MsgVpnBridgeTlsTrustedCommonNameLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnBridgeTlsTrustedCommonNamesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnBridgeTlsTrustedCommonName'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnBridgeTlsTrustedCommonNameLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnBridgesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnBridge'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnBridgeLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnClientProfile:
    properties:
      allowBridgeConnectionsEnabled:
        description: Indicates whether Bridge clients using the Client Profile are
          allowed to connect.
        type: boolean
      allowCutThroughForwardingEnabled:
        description: Indicates whether clients using the Client Profile are allowed
          to bind to endpoints with the cut-through forwarding delivery mode.
        type: boolean
      allowGuaranteedEndpointCreateEnabled:
        description: Indicates whether clients using the Client Profile are allowed
          to create topic endponts or queues.
        type: boolean
      allowGuaranteedMsgReceiveEnabled:
        description: Indicates whether clients using the Client Profile are allowed
          to receive guaranteed messages.
        type: boolean
      allowGuaranteedMsgSendEnabled:
        description: Indicates whether clients using the Client Profile are allowed
          to send guaranteed messages.
        type: boolean
      allowSharedSubscriptionsEnabled:
        description: Enable or disable allowing shared subscriptions.
        type: boolean
      allowTransactedSessionsEnabled:
        description: Indicates whether clients using the Client Profile are allowed
          to establish transacted sessions.
        type: boolean
      apiQueueManagementCopyFromOnCreateName:
        description: The name of a queue to copy settings from when a new queue is
          created by a client using the Client Profile. The referenced queue must
          exist in the Message VPN.
        type: string
      apiTopicEndpointManagementCopyFromOnCreateName:
        description: The name of a topic endpoint to copy settings from when a new
          topic endpoint is created by a client using the Client Profile. The referenced
          topic endpoint must exist in the Message VPN.
        type: string
      clientProfileName:
        description: The name of the Client Profile.
        type: string
      compressionEnabled:
        description: Indicates whether clients using the Client Profile are allowed
          to use compression.
        type: boolean
      elidingDelay:
        description: The amount of time to delay the delivery of messages to clients
          using the Client Profile after the initial message has been delivered (the
          eliding delay interval), in milliseconds. A value of 0 means there is no
          delay in delivering messages to clients.
        format: int64
        type: integer
      elidingEnabled:
        description: Indicates whether message eliding is enabled for clients using
          the Client Profile.
        type: boolean
      elidingMaxTopicCount:
        description: The maximum number of topics tracked for message eliding per
          client connection using the Client Profile.
        format: int64
        type: integer
      eventClientProvisionedEndpointSpoolUsageThreshold:
        $ref: '#/definitions/EventThresholdByPercent'
      eventConnectionCountPerClientUsernameThreshold:
        $ref: '#/definitions/EventThreshold'
      eventEgressFlowCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventEndpointCountPerClientUsernameThreshold:
        $ref: '#/definitions/EventThreshold'
      eventIngressFlowCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventServiceSmfConnectionCountPerClientUsernameThreshold:
        $ref: '#/definitions/EventThreshold'
      eventServiceWebConnectionCountPerClientUsernameThreshold:
        $ref: '#/definitions/EventThreshold'
      eventSubscriptionCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventTransactedSessionCountThreshold:
        $ref: '#/definitions/EventThreshold'
      eventTransactionCountThreshold:
        $ref: '#/definitions/EventThreshold'
      maxConnectionCountPerClientUsername:
        description: The maximum number of client connections per Client Username
          using the Client Profile.
        format: int64
        type: integer
      maxEffectiveEndpointCount:
        description: The effective maximum number of queues and topic endpoints per
          Client Username using the Client Profile.
        format: int32
        type: integer
      maxEffectiveRxFlowCount:
        description: The effective maximum number of receive flows per client using
          the Client Profile.
        format: int32
        type: integer
      maxEffectiveSubscriptionCount:
        description: The effective maximum number of subscriptions per client using
          the Client Profile.
        format: int32
        type: integer
      maxEffectiveTransactedSessionCount:
        description: The effective maximum number of transacted sessions per client
          using the Client Profile.
        format: int32
        type: integer
      maxEffectiveTransactionCount:
        description: The effective maximum number of transactions per client using
          the Client Profile.
        format: int32
        type: integer
      maxEffectiveTxFlowCount:
        description: The effective maximum number of transmit flows per client using
          the Client Profile.
        format: int32
        type: integer
      maxEgressFlowCount:
        description: The maximum number of transmit flows per client using the Client
          Profile.
        format: int64
        type: integer
      maxEndpointCountPerClientUsername:
        description: The maximum number of queues and topic endpoints per Client Username
          using the Client Profile.
        format: int64
        type: integer
      maxIngressFlowCount:
        description: The maximum number of receive flows per client using the Client
          Profile.
        format: int64
        type: integer
      maxSubscriptionCount:
        description: The maximum number of subscriptions per client using the Client
          Profile.
        format: int64
        type: integer
      maxTransactedSessionCount:
        description: The maximum number of transacted sessions per client using the
          Client Profile.
        format: int64
        type: integer
      maxTransactionCount:
        description: The maximum number of transactions per client using the Client
          Profile.
        format: int64
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      queueControl1MaxDepth:
        description: The maximum depth of the "Control 1" (C-1) priority queue, in
          work units. Each work unit is 2048 bytes of message data.
        format: int32
        type: integer
      queueControl1MinMsgBurst:
        description: The number of messages that are always allowed entry into the
          "Control 1" (C-1) priority queue, regardless of the "queueControl1MaxDepth"
          value.
        format: int32
        type: integer
      queueDirect1MaxDepth:
        description: The maximum depth of the "Direct 1" (D-1) priority queue, in
          work units. Each work unit is 2048 bytes of message data.
        format: int32
        type: integer
      queueDirect1MinMsgBurst:
        description: The number of messages that are always allowed entry into the
          "Direct 1" (D-1) priority queue, regardless of the "queueDirect1MaxDepth"
          value.
        format: int32
        type: integer
      queueDirect2MaxDepth:
        description: The maximum depth of the "Direct 2" (D-2) priority queue, in
          work units. Each work unit is 2048 bytes of message data.
        format: int32
        type: integer
      queueDirect2MinMsgBurst:
        description: The number of messages that are always allowed entry into the
          "Direct 2" (D-2) priority queue, regardless of the "queueDirect2MaxDepth"
          value.
        format: int32
        type: integer
      queueDirect3MaxDepth:
        description: The maximum depth of the "Direct 3" (D-3) priority queue, in
          work units. Each work unit is 2048 bytes of message data.
        format: int32
        type: integer
      queueDirect3MinMsgBurst:
        description: The number of messages that are always allowed entry into the
          "Direct 3" (D-3) priority queue, regardless of the "queueDirect3MaxDepth"
          value.
        format: int32
        type: integer
      queueGuaranteed1MaxDepth:
        description: The maximum depth of the "Guaranteed 1" (G-1) priority queue,
          in work units. Each work unit is 2048 bytes of message data.
        format: int32
        type: integer
      queueGuaranteed1MinMsgBurst:
        description: The number of messages that are always allowed entry into the
          "Guaranteed 1" (G-3) priority queue, regardless of the "queueGuaranteed1MaxDepth"
          value.
        format: int32
        type: integer
      rejectMsgToSenderOnNoSubscriptionMatchEnabled:
        description: Indicates whether to send a negative acknowledgement (NACK) to
          a client using the Client Profile when discarding a guaranteed message due
          to no matching subscription found.
        type: boolean
      replicationAllowClientConnectWhenStandbyEnabled:
        description: Indicates whether clients using the Client Profile are allowed
          to connect to the Message VPN when its replication state is standby.
        type: boolean
      serviceSmfMaxConnectionCountPerClientUsername:
        description: The maximum number of SMF client connections per Client Username
          using the Client Profile.
        format: int64
        type: integer
      serviceWebInactiveTimeout:
        description: The timeout for inactive Web Transport client sessions using
          the Client Profile, in seconds.
        format: int64
        type: integer
      serviceWebMaxConnectionCountPerClientUsername:
        description: The maximum number of Web Transport client connections per Client
          Username using the Client Profile.
        format: int64
        type: integer
      serviceWebMaxPayload:
        description: The maximum Web Transport payload size before fragmentation occurs
          for clients using the Client Profile, in bytes. The size of the header is
          not included.
        format: int64
        type: integer
      tcpCongestionWindowSize:
        description: The TCP initial congestion window size for clients using the
          Client Profile, in multiples of the TCP Maximum Segment Size (MSS). Changing
          the value from its default of 2 results in non-compliance with RFC 2581.
          Contact Solace Support before changing this value.
        format: int64
        type: integer
      tcpKeepaliveCount:
        description: The number of TCP keepalive retransmissions to a client using
          the Client Profile before declaring that it is not available.
        format: int64
        type: integer
      tcpKeepaliveIdleTime:
        description: The amount of time a client connection using the Client Profile
          must remain idle before TCP begins sending keepalive probes, in seconds.
        format: int64
        type: integer
      tcpKeepaliveInterval:
        description: The amount of time between TCP keepalive retransmissions to a
          client using the Client Profile when no acknowledgement is received, in
          seconds.
        format: int64
        type: integer
      tcpMaxSegmentSize:
        description: The TCP maximum segment size for clients using the Client Profile,
          in kilobytes. Changes are applied to all existing connections.
        format: int64
        type: integer
      tcpMaxWindowSize:
        description: The TCP maximum window size for clients using the Client Profile,
          in kilobytes. Changes are applied to all existing connections.
        format: int64
        type: integer
      tlsAllowDowngradeToPlainTextEnabled:
        description: Indicates whether clients using the Client Profile are allowed
          to downgrade an encrypted connection to plain text.
        type: boolean
    type: object
  MsgVpnClientProfileLinks:
    properties:
      uri:
        description: The URI of this MsgVpnClientProfile object.
        type: string
    type: object
  MsgVpnClientProfileResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnClientProfile'
      links:
        $ref: '#/definitions/MsgVpnClientProfileLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnClientProfilesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnClientProfile'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnClientProfileLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnClientUsername:
    properties:
      aclProfileName:
        description: The ACL Profile of the Client Username.
        type: string
      clientProfileName:
        description: The Client Profile of the Client Username.
        type: string
      clientUsername:
        description: The value of the Client Username.
        type: string
      dynamic:
        description: Indicates whether the Client Username was dynamically created
          based on remote authorization data.
        type: boolean
      enabled:
        description: Indicates whether the Client Username is enabled.
        type: boolean
      guaranteedEndpointPermissionOverrideEnabled:
        description: Indicates whether the guaranteed endpoint permission override
          is enabled for the Client Username.
        type: boolean
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      subscriptionManagerEnabled:
        description: Indicates whether the subscription management capability is enabled
          for the Client Username.
        type: boolean
    type: object
  MsgVpnClientUsernameLinks:
    properties:
      uri:
        description: The URI of this MsgVpnClientUsername object.
        type: string
    type: object
  MsgVpnClientUsernameResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnClientUsername'
      links:
        $ref: '#/definitions/MsgVpnClientUsernameLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnClientUsernamesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnClientUsername'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnClientUsernameLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnCounter:
    properties:
      controlRxByteCount:
        description: The amount of client control messages received from clients by
          the Message VPN, in bytes (B).
        format: int64
        type: integer
      controlRxMsgCount:
        description: The number of client control messages received from clients by
          the Message VPN.
        format: int64
        type: integer
      controlTxByteCount:
        description: The amount of client control messages transmitted to clients
          by the Message VPN, in bytes (B).
        format: int64
        type: integer
      controlTxMsgCount:
        description: The number of client control messages transmitted to clients
          by the Message VPN.
        format: int64
        type: integer
      dataRxByteCount:
        description: The amount of client data messages received from clients by the
          Message VPN, in bytes (B).
        format: int64
        type: integer
      dataRxMsgCount:
        description: The number of client data messages received from clients by the
          Message VPN.
        format: int64
        type: integer
      dataTxByteCount:
        description: The amount of client data messages transmitted to clients by
          the Message VPN, in bytes (B).
        format: int64
        type: integer
      dataTxMsgCount:
        description: The number of client data messages transmitted to clients by
          the Message VPN.
        format: int64
        type: integer
      discardedRxMsgCount:
        description: The number of messages discarded during reception by the Message
          VPN.
        format: int32
        type: integer
      discardedTxMsgCount:
        description: The number of messages discarded during transmission by the Message
          VPN.
        format: int32
        type: integer
      loginRxMsgCount:
        description: The number of login request messages received by the Message
          VPN.
        format: int64
        type: integer
      loginTxMsgCount:
        description: The number of login response messages transmitted by the Message
          VPN.
        format: int64
        type: integer
      msgSpoolRxMsgCount:
        description: The number of guaranteed messages received by the Message VPN.
        format: int64
        type: integer
      msgSpoolTxMsgCount:
        description: The number of guaranteed messages transmitted by the Message
          VPN. One message to multiple clients is counted as one message.
        format: int64
        type: integer
      tlsRxByteCount:
        description: The amount of TLS messages received by the Message VPN, in bytes
          (B).
        format: int32
        type: integer
      tlsTxByteCount:
        description: The amount of TLS messages transmitted by the Message VPN, in
          bytes (B).
        format: int64
        type: integer
    type: object
  MsgVpnDistributedCache:
    properties:
      cacheName:
        description: The name of the Distributed Cache.
        type: string
      enabled:
        description: Indicates whether the Distributed Cache is enabled.
        type: boolean
      heartbeat:
        description: The heartbeat interval, in seconds, used by the Cache Instances
          to monitor connectivity with the message broker.
        format: int64
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      msgsLost:
        description: Indicates whether one or more messages were lost by any Cache
          Instance in the Distributed Cache.
        type: boolean
      scheduledDeleteMsgDayList:
        description: The scheduled delete message day(s), specified as "daily" or
          a comma-separated list of days. Days must be specified as "Sun", "Mon",
          "Tue", "Wed", "Thu", "Fri", or "Sat", with no spaces, and in sorted order
          from Sunday to Saturday.
        type: string
      scheduledDeleteMsgTimeList:
        description: The scheduled delete message time(s), specified as "hourly" or
          a comma-separated list of 24-hour times in the form hh:mm, or h:mm. There
          must be no spaces, and times must be in sorted order from 0:00 to 23:59.
        type: string
    type: object
  MsgVpnDistributedCacheCluster:
    properties:
      cacheName:
        description: The name of the Distributed Cache.
        type: string
      clusterName:
        description: The name of the Cache Cluster.
        type: string
      deliverToOneOverrideEnabled:
        description: Indicates whether deliver-to-one override is enabled for the
          Cache Cluster.
        type: boolean
      enabled:
        description: Indicates whether the Cache Cluster is enabled.
        type: boolean
      eventDataByteRateThreshold:
        $ref: '#/definitions/EventThresholdByValue'
      eventDataMsgRateThreshold:
        $ref: '#/definitions/EventThresholdByValue'
      eventMaxMemoryThreshold:
        $ref: '#/definitions/EventThresholdByPercent'
      eventMaxTopicsThreshold:
        $ref: '#/definitions/EventThresholdByPercent'
      eventRequestQueueDepthThreshold:
        $ref: '#/definitions/EventThresholdByPercent'
      eventRequestRateThreshold:
        $ref: '#/definitions/EventThresholdByValue'
      eventResponseRateThreshold:
        $ref: '#/definitions/EventThresholdByValue'
      globalCachingEnabled:
        description: Indicates whether global caching for the Cache Cluster is enabled,
          and the Cache Instances will fetch topics from remote Home Cache Clusters
          when requested, and subscribe to those topics to cache them locally.
        type: boolean
      globalCachingHeartbeat:
        description: The heartbeat interval, in seconds, used by the Cache Instances
          to monitor connectivity with the remote Home Cache Clusters.
        format: int64
        type: integer
      globalCachingTopicLifetime:
        description: The topic lifetime, in seconds. If no client requests are received
          for a given global topic over the duration of the topic lifetime, then the
          Cache Instance will remove the subscription and cached messages for that
          topic. A value of 0 disables aging.
        format: int64
        type: integer
      maxMemory:
        description: The maximum memory usage, in megabytes (MB), for each Cache Instance
          in the Cache Cluster.
        format: int64
        type: integer
      maxMsgsPerTopic:
        description: The maximum number of messages per topic for each Cache Instance
          in the Cache Cluster. When at the maximum, old messages are removed as new
          messages arrive.
        format: int64
        type: integer
      maxRequestQueueDepth:
        description: The maximum queue depth for cache requests received by the Cache
          Cluster.
        format: int64
        type: integer
      maxTopicCount:
        description: The maximum number of topics for each Cache Instance in the Cache
          Cluster.
        format: int64
        type: integer
      msgLifetime:
        description: The message lifetime, in seconds. If a message remains cached
          for the duration of its lifetime, the Cache Instance will remove the message.
          A lifetime of 0 results in the message being retained indefinitely.
        format: int64
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      msgsLost:
        description: Indicates whether one or more messages were lost by any Cache
          Instance in the Cache Cluster.
        type: boolean
      newTopicAdvertisementEnabled:
        description: Indicates whether advertising of new topics learned by the Cache
          Instances in this Cache Cluster is enabled.
        type: boolean
    type: object
  MsgVpnDistributedCacheClusterGlobalCachingHomeCluster:
    properties:
      cacheName:
        description: The name of the Distributed Cache.
        type: string
      clusterName:
        description: The name of the Cache Cluster.
        type: string
      homeClusterName:
        description: The name of the remote Home Cache Cluster.
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
    type: object
  MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks:
    properties:
      topicPrefixesUri:
        description: The URI of this MsgVpnDistributedCacheClusterGlobalCachingHomeCluster's
          topicPrefixes collection.
        type: string
      uri:
        description: The URI of this MsgVpnDistributedCacheClusterGlobalCachingHomeCluster
          object.
        type: string
    type: object
  MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster'
      links:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix:
    properties:
      cacheName:
        description: The name of the Distributed Cache.
        type: string
      clusterName:
        description: The name of the Cache Cluster.
        type: string
      homeClusterName:
        description: The name of the remote Home Cache Cluster.
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      topicPrefix:
        description: A topic prefix for global topics available from the remote Home
          Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
        type: string
    type: object
  MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks:
    properties:
      uri:
        description: The URI of this MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix
          object.
        type: string
    type: object
  MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix'
      links:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClusterInstance:
    properties:
      autoStartEnabled:
        description: Indicates whether auto-start for the Cache Instance is enabled,
          and the Cache Instance will automatically attempt to transition from the
          Stopped operational state to Up whenever it restarts or reconnects to the
          message broker.
        type: boolean
      cacheName:
        description: The name of the Distributed Cache.
        type: string
      clusterName:
        description: The name of the Cache Cluster.
        type: string
      counter:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceCounter'
      enabled:
        description: Indicates whether the Cache Instance is enabled.
        type: boolean
      instanceName:
        description: The name of the Cache Instance.
        type: string
      lastRegisteredTime:
        description: The timestamp of when the Cache Instance last registered with
          the message broker. This value represents the number of seconds since 1970-01-01
          00:00:00 UTC (Unix time).
        format: int32
        type: integer
      lastRxHeartbeatTime:
        description: The timestamp of the last heartbeat message received from the
          Cache Instance. This value represents the number of seconds since 1970-01-01
          00:00:00 UTC (Unix time).
        format: int32
        type: integer
      lastRxSetLostMsgTime:
        description: The timestamp of the last request for setting the lost message
          indication received from the Cache Instance. This value represents the number
          of seconds since 1970-01-01 00:00:00 UTC (Unix time).
        format: int32
        type: integer
      lastStoppedReason:
        description: The reason why the Cache Instance was last stopped.
        type: string
      lastStoppedTime:
        description: The timestamp of when the Cache Instance was last stopped. This
          value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix
          time).
        format: int32
        type: integer
      lastTxClearLostMsgTime:
        description: The timestamp of the last request for clearing the lost message
          indication transmitted to the Cache Instance. This value represents the
          number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
        format: int32
        type: integer
      memoryUsage:
        description: The memory usage of the Cache Instance, in megabytes (MB).
        format: int32
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      msgsLost:
        description: Indicates whether one or more messages were lost by the Cache
          Instance.
        type: boolean
      rate:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRate'
      state:
        description: 'The operational state of the Cache Instance as: up, down, stopped,
          register, etc.'
        type: string
      stopOnLostMsgEnabled:
        description: Indicates whether stop-on-lost-message is enabled, and the Cache
          Instance will transition to the Stopped operational state upon losing a
          message. When Stopped, it cannot accept or respond to cache requests, but
          continues to cache messages.
        type: boolean
    type: object
  MsgVpnDistributedCacheClusterInstanceCounter:
    properties:
      msgCount:
        description: The number of messages cached for the Cache Instance.
        format: int64
        type: integer
      msgPeakCount:
        description: The number of messages cached peak for the Cache Instance.
        format: int64
        type: integer
      requestQueueDepthCount:
        description: The received request message queue depth for the Cache Instance.
        format: int64
        type: integer
      requestQueueDepthPeakCount:
        description: The received request message queue depth peak for the Cache Instance.
        format: int64
        type: integer
      topicCount:
        description: The number of topics cached for the Cache Instance.
        format: int64
        type: integer
      topicPeakCount:
        description: The number of topics cached peak for the Cache Instance.
        format: int64
        type: integer
    type: object
  MsgVpnDistributedCacheClusterInstanceLinks:
    properties:
      remoteGlobalCachingHomeClustersUri:
        description: The URI of this MsgVpnDistributedCacheClusterInstance's remoteGlobalCachingHomeClusters
          collection.
        type: string
      remoteTopicsUri:
        description: The URI of this MsgVpnDistributedCacheClusterInstance's remoteTopics
          collection.
        type: string
      uri:
        description: The URI of this MsgVpnDistributedCacheClusterInstance object.
        type: string
    type: object
  MsgVpnDistributedCacheClusterInstanceRate:
    properties:
      averageDataRxBytePeakRate:
        description: The peak of the one minute average of the data message rate received
          by the Cache Instance, in bytes per second (B/sec).
        format: int64
        type: integer
      averageDataRxByteRate:
        description: The one minute average of the data message rate received by the
          Cache Instance, in bytes per second (B/sec).
        format: int64
        type: integer
      averageDataRxMsgPeakRate:
        description: The peak of the one minute average of the data message rate received
          by the Cache Instance, in messages per second (msg/sec).
        format: int64
        type: integer
      averageDataRxMsgRate:
        description: The one minute average of the data message rate received by the
          Cache Instance, in messages per second (msg/sec).
        format: int64
        type: integer
      averageDataTxMsgPeakRate:
        description: The peak of the one minute average of the data message rate transmitted
          by the Cache Instance, in messages per second (msg/sec).
        format: int64
        type: integer
      averageDataTxMsgRate:
        description: The one minute average of the data message rate transmitted by
          the Cache Instance, in messages per second (msg/sec).
        format: int64
        type: integer
      averageRequestRxPeakRate:
        description: The peak of the one minute average of the request rate received
          by the Cache Instance, in requests per second (req/sec).
        format: int64
        type: integer
      averageRequestRxRate:
        description: The one minute average of the request rate received by the Cache
          Instance, in requests per second (req/sec).
        format: int64
        type: integer
      dataRxBytePeakRate:
        description: The data message peak rate received by the Cache Instance, in
          bytes per second (B/sec).
        format: int64
        type: integer
      dataRxByteRate:
        description: The data message rate received by the Cache Instance, in bytes
          per second (B/sec).
        format: int64
        type: integer
      dataRxMsgPeakRate:
        description: The data message peak rate received by the Cache Instance, in
          messages per second (msg/sec).
        format: int64
        type: integer
      dataRxMsgRate:
        description: The data message rate received by the Cache Instance, in messages
          per second (msg/sec).
        format: int64
        type: integer
      dataTxMsgPeakRate:
        description: The data message peak rate transmitted by the Cache Instance,
          in messages per second (msg/sec).
        format: int64
        type: integer
      dataTxMsgRate:
        description: The data message rate transmitted by the Cache Instance, in messages
          per second (msg/sec).
        format: int64
        type: integer
      requestRxPeakRate:
        description: The request peak rate received by the Cache Instance, in requests
          per second (req/sec).
        format: int64
        type: integer
      requestRxRate:
        description: The request rate received by the Cache Instance, in requests
          per second (req/sec).
        format: int64
        type: integer
    type: object
  MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster:
    properties:
      cacheName:
        description: The name of the Distributed Cache.
        type: string
      cacheRequestForwardedCount:
        description: The number of cache requests forwarded to the remote Home Cache
          Cluster.
        format: int32
        type: integer
      cacheRequestRxCount:
        description: The number of cache requests received from the remote Home Cache
          Cluster.
        format: int32
        type: integer
      clusterName:
        description: The name of the Cache Cluster.
        type: string
      heartbeatRxCount:
        description: The number of heartbeat messages received from the remote Home
          Cache Cluster.
        format: int64
        type: integer
      heartbeatUp:
        description: The operational state of the heartbeat with the remote Home Cache
          Cluster is up.
        type: boolean
      homeClusterName:
        description: The name of the remote Home Cache Cluster.
        type: string
      instanceName:
        description: The name of the Cache Instance.
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
    type: object
  MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterLinks:
    properties:
      uri:
        description: The URI of this MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster
          object.
        type: string
    type: object
  MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster'
      links:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClustersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClusterInstanceRemoteTopic:
    properties:
      cacheName:
        description: The name of the Distributed Cache.
        type: string
      clusterName:
        description: The name of the Cache Cluster.
        type: string
      globalTopic:
        description: Indicates whether the type of the remote Topic is global.
        type: boolean
      homeClusterName:
        description: The name of the remote Home Cache Cluster.
        type: string
      instanceName:
        description: The name of the Cache Instance.
        type: string
      msgCount:
        description: The number of messages cached for the remote Topic.
        format: int32
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      suspect:
        description: Indicates whether the remote Topic is suspect due to the remote
          Home Cache Cluster being in the lost message state.
        type: boolean
      topic:
        description: The value of the remote Topic.
        type: string
    type: object
  MsgVpnDistributedCacheClusterInstanceRemoteTopicLinks:
    properties:
      uri:
        description: The URI of this MsgVpnDistributedCacheClusterInstanceRemoteTopic
          object.
        type: string
    type: object
  MsgVpnDistributedCacheClusterInstanceRemoteTopicResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopic'
      links:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopicLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClusterInstanceRemoteTopicsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopic'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopicLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClusterInstanceResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterInstance'
      links:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClusterInstancesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterInstance'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClusterLinks:
    properties:
      globalCachingHomeClustersUri:
        description: The URI of this MsgVpnDistributedCacheCluster's globalCachingHomeClusters
          collection.
        type: string
      instancesUri:
        description: The URI of this MsgVpnDistributedCacheCluster's instances collection.
        type: string
      topicsUri:
        description: The URI of this MsgVpnDistributedCacheCluster's topics collection.
        type: string
      uri:
        description: The URI of this MsgVpnDistributedCacheCluster object.
        type: string
    type: object
  MsgVpnDistributedCacheClusterResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnDistributedCacheCluster'
      links:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClusterTopic:
    properties:
      cacheName:
        description: The name of the Distributed Cache.
        type: string
      clusterName:
        description: The name of the Cache Cluster.
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      topic:
        description: The value of the Topic in the form a/b/c.
        type: string
    type: object
  MsgVpnDistributedCacheClusterTopicLinks:
    properties:
      uri:
        description: The URI of this MsgVpnDistributedCacheClusterTopic object.
        type: string
    type: object
  MsgVpnDistributedCacheClusterTopicResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterTopic'
      links:
        $ref: '#/definitions/MsgVpnDistributedCacheClusterTopicLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClusterTopicsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterTopic'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterTopicLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheClustersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheCluster'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheClusterLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCacheLinks:
    properties:
      clustersUri:
        description: The URI of this MsgVpnDistributedCache's clusters collection.
        type: string
      uri:
        description: The URI of this MsgVpnDistributedCache object.
        type: string
    type: object
  MsgVpnDistributedCacheResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnDistributedCache'
      links:
        $ref: '#/definitions/MsgVpnDistributedCacheLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDistributedCachesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnDistributedCache'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnDistributedCacheLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDmrBridge:
    properties:
      failureReason:
        description: The last failure reason for the DMR Bridge.
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      remoteMsgVpnName:
        description: The remote Message VPN of the DMR Bridge.
        type: string
      remoteNodeName:
        description: The name of the node at the remote end of the DMR Bridge.
        type: string
      up:
        description: Indicates whether the operational state of the DMR Bridge is
          up.
        type: boolean
      uptime:
        description: The amount of time in seconds since the DMR Bridge was up.
        format: int64
        type: integer
    type: object
  MsgVpnDmrBridgeLinks:
    properties:
      uri:
        description: The URI of this MsgVpnDmrBridge object.
        type: string
    type: object
  MsgVpnDmrBridgeResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnDmrBridge'
      links:
        $ref: '#/definitions/MsgVpnDmrBridgeLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnDmrBridgesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnDmrBridge'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnDmrBridgeLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnJndiConnectionFactoriesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnJndiConnectionFactory'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnJndiConnectionFactoryLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnJndiConnectionFactory:
    properties:
      allowDuplicateClientIdEnabled:
        description: Indicates whether new JMS connections can use the same Client
          identifier (ID) as an existing connection.
        type: boolean
      clientDescription:
        description: The description of the Client.
        type: string
      clientId:
        description: The Client identifier (ID). If not specified, a unique value
          for it will be generated.
        type: string
      connectionFactoryName:
        description: The name of the JMS Connection Factory.
        type: string
      dtoReceiveOverrideEnabled:
        description: Indicates whether overriding by the Subscriber (Consumer) of
          the deliver-to-one (DTO) property on messages is enabled. When enabled,
          the Subscriber can receive all DTO tagged messages.
        type: boolean
      dtoReceiveSubscriberLocalPriority:
        description: The priority for receiving deliver-to-one (DTO) messages by the
          Subscriber (Consumer) if the messages are published on the local Router
          that the Subscriber is directly connected to.
        format: int32
        type: integer
      dtoReceiveSubscriberNetworkPriority:
        description: The priority for receiving deliver-to-one (DTO) messages by the
          Subscriber (Consumer) if the messages are published on a remote Router.
        format: int32
        type: integer
      dtoSendEnabled:
        description: Indicates whether the deliver-to-one (DTO) property is enabled
          on messages sent by the Publisher (Producer).
        type: boolean
      dynamicEndpointCreateDurableEnabled:
        description: Indicates whether a durable endpoint will be dynamically created
          on the Router when the client calls "Session.createDurableSubscriber()"
          or "Session.createQueue()". The created endpoint respects the message time-to-live
          (TTL) according to the "dynamicEndpointRespectTtlEnabled" property.
        type: boolean
      dynamicEndpointRespectTtlEnabled:
        description: Indicates whether dynamically created durable and non-durable
          endpoints respect the message time-to-live (TTL) property.
        type: boolean
      guaranteedReceiveAckTimeout:
        description: The timeout for sending the acknowledgement (ACK) for guaranteed
          messages received by the Subscriber (Consumer), in milliseconds.
        format: int32
        type: integer
      guaranteedReceiveWindowSize:
        description: The size of the window for guaranteed messages received by the
          Subscriber (Consumer), in messages.
        format: int32
        type: integer
      guaranteedReceiveWindowSizeAckThreshold:
        description: The threshold for sending the acknowledgement (ACK) for guaranteed
          messages received by the Subscriber (Consumer) as a percentage of the "guaranteedReceiveWindowSize"
          value.
        format: int32
        type: integer
      guaranteedSendAckTimeout:
        description: The timeout for receiving the acknowledgement (ACK) for guaranteed
          messages sent by the Publisher (Producer), in milliseconds.
        format: int32
        type: integer
      guaranteedSendWindowSize:
        description: The size of the window for non-persistent guaranteed messages
          sent by the Publisher (Producer), in messages. For persistent messages the
          window size is fixed at 1.
        format: int32
        type: integer
      messagingDefaultDeliveryMode:
        description: 'The default delivery mode for messages sent by the Publisher
          (Producer). The allowed values and their meaning are:


          <pre>

          "persistent" - Router spools messages (persists in the Message Spool) as
          part of the send operation.

          "non-persistent" - Router does not spool messages (does not persist in the
          Message Spool) as part of the send operation.

          </pre>

          '
        enum:
        - persistent
        - non-persistent
        type: string
      messagingDefaultDmqEligibleEnabled:
        description: Indicates whether messages sent by the Publisher (Producer) are
          Dead Message Queue (DMQ) eligible by default.
        type: boolean
      messagingDefaultElidingEligibleEnabled:
        description: Indicates whether messages sent by the Publisher (Producer) are
          Eliding eligible by default.
        type: boolean
      messagingJmsxUserIdEnabled:
        description: Indicates whether to include (add or replace) the JMSXUserID
          property in messages sent by the Publisher (Producer).
        type: boolean
      messagingTextInXmlPayloadEnabled:
        description: Indicates whether encoding of JMS text messages in Publisher
          (Producer) messages is as XML payload. When disabled, JMS text messages
          are encoded as a binary attachment.
        type: boolean
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      transportCompressionLevel:
        description: The ZLIB compression level for the connection to the Router.
          The value "0" means no compression, and the value "-1" means the compression
          level is specified in the JNDI Properties file.
        format: int32
        type: integer
      transportConnectRetryCount:
        description: The maximum number of retry attempts to establish an initial
          connection to the host (Router) or list of hosts (Routers). The value "0"
          means a single attempt (no retries), and the value "-1" means to retry forever.
        format: int32
        type: integer
      transportConnectRetryPerHostCount:
        description: The maximum number of retry attempts to establish an initial
          connection to each host (Router) on the list of hosts (Routers). The value
          "0" means a single attempt (no retries), and the value "-1" means to retry
          forever.
        format: int32
        type: integer
      transportConnectTimeout:
        description: The timeout for establishing an initial connection to the Router,
          in milliseconds.
        format: int32
        type: integer
      transportDirectTransportEnabled:
        description: Enable or disable usage of the Direct Transport mode for sending
          non-persistent messages. When disabled, the Guaranteed Transport mode is
          used.
        type: boolean
      transportKeepaliveCount:
        description: The maximum number of consecutive application-level keepalive
          messages sent without the Router response before the connection to the Router
          is closed.
        format: int32
        type: integer
      transportKeepaliveEnabled:
        description: Indicates whether application-level keepalive messages are used
          to maintain a connection with the Router.
        type: boolean
      transportKeepaliveInterval:
        description: The interval between application-level keepalive messages, in
          milliseconds.
        format: int32
        type: integer
      transportMsgCallbackOnIoThreadEnabled:
        description: Indicates whether delivery of asynchronous messages is done directly
          from the I/O thread.
        type: boolean
      transportOptimizeDirectEnabled:
        description: Indicates whether optimization for the Direct Transport delivery
          mode is enabled. If enabled, the client application is limited to one Publisher
          (Producer) and one non-durable Subscriber (Consumer).
        type: boolean
      transportPort:
        description: The connection port number on the Router for SMF clients. The
          value "-1" means the port is specified in the JNDI Properties file.
        format: int32
        type: integer
      transportReadTimeout:
        description: The timeout for reading a reply from the Router, in milliseconds.
        format: int32
        type: integer
      transportReceiveBufferSize:
        description: The size of the receive socket buffer, in bytes. It corresponds
          to the SO_RCVBUF socket option.
        format: int32
        type: integer
      transportReconnectRetryCount:
        description: The maximum number of attempts to reconnect to the host (Router)
          or list of hosts (Routers) after the connection has been lost. The value
          "-1" means to retry forever.
        format: int32
        type: integer
      transportReconnectRetryWait:
        description: The amount of time before making another attempt to connect or
          reconnect to the host (Router) after the connection has been lost, in milliseconds.
        format: int32
        type: integer
      transportSendBufferSize:
        description: The size of the send socket buffer, in bytes. It corresponds
          to the SO_SNDBUF socket option.
        format: int32
        type: integer
      transportTcpNoDelayEnabled:
        description: Indicates whether the TCP_NODELAY option is enabled, which disables
          Nagle's algorithm for TCP/IP congestion control (RFC 896).
        type: boolean
      xaEnabled:
        description: Indicates whether this is an XA Connection Factory. When enabled,
          the Connection Factory can be cast to "XAConnectionFactory", "XAQueueConnectionFactory"
          or "XATopicConnectionFactory".
        type: boolean
    type: object
  MsgVpnJndiConnectionFactoryLinks:
    properties:
      uri:
        description: The URI of this MsgVpnJndiConnectionFactory object.
        type: string
    type: object
  MsgVpnJndiConnectionFactoryResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnJndiConnectionFactory'
      links:
        $ref: '#/definitions/MsgVpnJndiConnectionFactoryLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnJndiQueue:
    properties:
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      physicalName:
        description: The physical name of the JMS Queue.
        type: string
      queueName:
        description: The JNDI name of the JMS Queue.
        type: string
    type: object
  MsgVpnJndiQueueLinks:
    properties:
      uri:
        description: The URI of this MsgVpnJndiQueue object.
        type: string
    type: object
  MsgVpnJndiQueueResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnJndiQueue'
      links:
        $ref: '#/definitions/MsgVpnJndiQueueLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnJndiQueuesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnJndiQueue'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnJndiQueueLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnJndiTopic:
    properties:
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      physicalName:
        description: The physical name of the JMS Topic.
        type: string
      topicName:
        description: The JNDI name of the JMS Topic.
        type: string
    type: object
  MsgVpnJndiTopicLinks:
    properties:
      uri:
        description: The URI of this MsgVpnJndiTopic object.
        type: string
    type: object
  MsgVpnJndiTopicResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnJndiTopic'
      links:
        $ref: '#/definitions/MsgVpnJndiTopicLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnJndiTopicsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnJndiTopic'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnJndiTopicLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnLinks:
    properties:
      aclProfilesUri:
        description: The URI of this MsgVpn's aclProfiles collection.
        type: string
      authorizationGroupsUri:
        description: The URI of this MsgVpn's authorizationGroups collection.
        type: string
      bridgesUri:
        description: The URI of this MsgVpn's bridges collection.
        type: string
      clientProfilesUri:
        description: The URI of this MsgVpn's clientProfiles collection.
        type: string
      clientUsernamesUri:
        description: The URI of this MsgVpn's clientUsernames collection.
        type: string
      distributedCachesUri:
        description: The URI of this MsgVpn's distributedCaches collection.
        type: string
      dmrBridgesUri:
        description: The URI of this MsgVpn's dmrBridges collection.
        type: string
      jndiConnectionFactoriesUri:
        description: The URI of this MsgVpn's jndiConnectionFactories collection.
        type: string
      jndiQueuesUri:
        description: The URI of this MsgVpn's jndiQueues collection.
        type: string
      jndiTopicsUri:
        description: The URI of this MsgVpn's jndiTopics collection.
        type: string
      mqttRetainCachesUri:
        description: The URI of this MsgVpn's mqttRetainCaches collection.
        type: string
      mqttSessionsUri:
        description: The URI of this MsgVpn's mqttSessions collection.
        type: string
      replayLogsUri:
        description: The URI of this MsgVpn's replayLogs collection.
        type: string
      restDeliveryPointsUri:
        description: The URI of this MsgVpn's restDeliveryPoints collection.
        type: string
      uri:
        description: The URI of this MsgVpn object.
        type: string
    type: object
  MsgVpnMqttRetainCache:
    properties:
      backupCacheInstance:
        description: The name of the backup Cache Instance associated with this MQTT
          Retain Cache.
        type: string
      backupFailureReason:
        description: The reason why the backup cache associated with this MQTT Retain
          Cache is operationally down, if any.
        type: string
      backupUp:
        description: Whether the backup cache associated with this MQTT Retain Cache
          is operationally up.
        type: boolean
      backupUptime:
        description: The number of seconds that the backup cache associated with this
          MQTT Retain Cache has been operationally up.
        format: int32
        type: integer
      cacheCluster:
        description: The name of the Cache Cluster associated with this MQTT Retain
          Cache.
        type: string
      cacheName:
        description: The name of the MQTT Retain Cache.
        type: string
      distributedCache:
        description: The name of the Distributed Cache associated with this MQTT Retain
          Cache.
        type: string
      enabled:
        description: Enable or disable this MQTT Retain Cache. When the cache is disabled,
          neither retain messages nor retain requests will be delivered by the cache.
          However, live retain messages will continue to be delivered to currently
          connected MQTT clients.
        type: boolean
      failureReason:
        description: The reason why this MQTT Retain Cache is operationally down,
          if any.
        type: string
      msgLifetime:
        description: The message lifetime, in seconds. If a message remains cached
          for the duration of its lifetime, the cache will remove the message. A lifetime
          of 0 results in the message being retained indefinitely.
        format: int64
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      primaryCacheInstance:
        description: The name of the primary Cache Instance associated with this MQTT
          Retain Cache.
        type: string
      primaryFailureReason:
        description: The reason why the primary cache associated with this MQTT Retain
          Cache is operationally down, if any.
        type: string
      primaryUp:
        description: Whether the primary cache associated with this MQTT Retain Cache
          is operationally up.
        type: boolean
      primaryUptime:
        description: The number of seconds that the primary cache associated with
          this MQTT Retain Cache has been operationally up.
        format: int32
        type: integer
      up:
        description: Whether this MQTT Retain Cache is operationally up.
        type: boolean
      uptime:
        description: The number of seconds that the MQTT Retain Cache has been operationally
          up.
        format: int32
        type: integer
    type: object
  MsgVpnMqttRetainCacheLinks:
    properties:
      uri:
        description: The URI of this MsgVpnMqttRetainCache object.
        type: string
    type: object
  MsgVpnMqttRetainCacheResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnMqttRetainCache'
      links:
        $ref: '#/definitions/MsgVpnMqttRetainCacheLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnMqttRetainCachesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnMqttRetainCache'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnMqttRetainCacheLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnMqttSession:
    properties:
      clean:
        description: Indicates whether the Client requested a clean (newly created)
          MQTT Session when connecting. If not clean (already existing), then previously
          stored messages for QoS 1 subscriptions are delivered.
        type: boolean
      clientName:
        description: The name of the MQTT Session Client.
        type: string
      counter:
        $ref: '#/definitions/MsgVpnMqttSessionCounter'
      createdByManagement:
        description: Indicates whether the MQTT Session was created by a Management
          API.
        type: boolean
      enabled:
        description: Indicates whether the MQTT Session is enabled.
        type: boolean
      mqttSessionClientId:
        description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        type: string
      mqttSessionVirtualRouter:
        description: 'The virtual router of the MQTT Session. The allowed values and
          their meaning are:


          <pre>

          "primary" - The MQTT Session belongs to the primary virtual router.

          "backup" - The MQTT Session belongs to the backup virtual router.

          </pre>

          '
        enum:
        - primary
        - backup
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      owner:
        description: The Client Username which owns the MQTT Session.
        type: string
      queueName:
        description: The name of the MQTT Session Queue.
        type: string
      will:
        description: Indicates whether the MQTT Session has the Will message specified
          by the Client. The Will message is published if the Client disconnects without
          sending the MQTT DISCONNECT packet.
        type: boolean
    type: object
  MsgVpnMqttSessionCounter:
    properties:
      mqttConnackErrorTxCount:
        description: The number of MQTT connect acknowledgment (CONNACK) refused response
          packets transmitted to the Client.
        format: int64
        type: integer
      mqttConnackTxCount:
        description: The number of MQTT connect acknowledgment (CONNACK) accepted
          response packets transmitted to the Client.
        format: int64
        type: integer
      mqttConnectRxCount:
        description: The number of MQTT connect (CONNECT) request packets received
          from the Client.
        format: int32
        type: integer
      mqttDisconnectRxCount:
        description: The number of MQTT disconnect (DISCONNECT) request packets received
          from the Client.
        format: int64
        type: integer
      mqttPubcompTxCount:
        description: The number of MQTT publish complete (PUBCOMP) packets transmitted
          to the Client in response to a PUBREL packet. These packets are the fourth
          and final packet of a QoS 2 protocol exchange.
        format: int64
        type: integer
      mqttPublishQos0RxCount:
        description: The number of MQTT publish message (PUBLISH) request packets
          received from the Client for QoS 0 message delivery.
        format: int64
        type: integer
      mqttPublishQos0TxCount:
        description: The number of MQTT publish message (PUBLISH) request packets
          transmitted to the Client for QoS 0 message delivery.
        format: int64
        type: integer
      mqttPublishQos1RxCount:
        description: The number of MQTT publish message (PUBLISH) request packets
          received from the Client for QoS 1 message delivery.
        format: int64
        type: integer
      mqttPublishQos1TxCount:
        description: The number of MQTT publish message (PUBLISH) request packets
          transmitted to the Client for QoS 1 message delivery.
        format: int64
        type: integer
      mqttPublishQos2RxCount:
        description: The number of MQTT publish message (PUBLISH) request packets
          received from the Client for QoS 2 message delivery.
        format: int64
        type: integer
      mqttPubrecTxCount:
        description: The number of MQTT publish received (PUBREC) packets transmitted
          to the Client in response to a PUBLISH packet with QoS 2. These packets
          are the second packet of a QoS 2 protocol exchange.
        format: int64
        type: integer
      mqttPubrelRxCount:
        description: The number of MQTT publish release (PUBREL) packets received
          from the Client in response to a PUBREC packet. These packets are the third
          packet of a QoS 2 protocol exchange.
        format: int64
        type: integer
    type: object
  MsgVpnMqttSessionLinks:
    properties:
      subscriptionsUri:
        description: The URI of this MsgVpnMqttSession's subscriptions collection.
        type: string
      uri:
        description: The URI of this MsgVpnMqttSession object.
        type: string
    type: object
  MsgVpnMqttSessionResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnMqttSession'
      links:
        $ref: '#/definitions/MsgVpnMqttSessionLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnMqttSessionSubscription:
    properties:
      mqttSessionClientId:
        description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        type: string
      mqttSessionVirtualRouter:
        description: 'The virtual router of the MQTT Session. The allowed values and
          their meaning are:


          <pre>

          "primary" - The MQTT Session belongs to the primary virtual router.

          "backup" - The MQTT Session belongs to the backup virtual router.

          </pre>

          '
        enum:
        - primary
        - backup
        type: string
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      subscriptionQos:
        description: The quality of service (QoS) for the MQTT Session subscription.
        format: int64
        type: integer
      subscriptionTopic:
        description: The MQTT subscription topic.
        type: string
    type: object
  MsgVpnMqttSessionSubscriptionLinks:
    properties:
      uri:
        description: The URI of this MsgVpnMqttSessionSubscription object.
        type: string
    type: object
  MsgVpnMqttSessionSubscriptionResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnMqttSessionSubscription'
      links:
        $ref: '#/definitions/MsgVpnMqttSessionSubscriptionLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnMqttSessionSubscriptionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnMqttSessionSubscription'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnMqttSessionSubscriptionLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnMqttSessionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnMqttSession'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnMqttSessionLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnRate:
    properties:
      averageRxByteRate:
        description: The one minute average of the message rate received by the Message
          VPN, in bytes per second (B/sec).
        format: int64
        type: integer
      averageRxMsgRate:
        description: The one minute average of the message rate received by the Message
          VPN, in messages per second (msg/sec).
        format: int64
        type: integer
      averageTxByteRate:
        description: The one minute average of the message rate transmitted by the
          Message VPN, in bytes per second (B/sec).
        format: int64
        type: integer
      averageTxMsgRate:
        description: The one minute average of the message rate transmitted by the
          Message VPN, in messages per second (msg/sec).
        format: int64
        type: integer
      rxByteRate:
        description: The current message rate received by the Message VPN, in bytes
          per second (B/sec).
        format: int64
        type: integer
      rxMsgRate:
        description: The current message rate received by the Message VPN, in messages
          per second (msg/sec).
        format: int64
        type: integer
      tlsAverageRxByteRate:
        description: The one minute average of the TLS message rate received by the
          Message VPN, in bytes per second (B/sec).
        format: int64
        type: integer
      tlsAverageTxByteRate:
        description: The one minute average of the TLS message rate transmitted by
          the Message VPN, in bytes per second (B/sec).
        format: int64
        type: integer
      tlsRxByteRate:
        description: The current TLS message rate received by the Message VPN, in
          bytes per second (B/sec).
        format: int64
        type: integer
      tlsTxByteRate:
        description: The current TLS message rate transmitted by the Message VPN,
          in bytes per second (B/sec).
        format: int64
        type: integer
      txByteRate:
        description: The current message rate transmitted by the Message VPN, in bytes
          per second (B/sec).
        format: int64
        type: integer
      txMsgRate:
        description: The current message rate transmitted by the Message VPN, in messages
          per second (msg/sec).
        format: int64
        type: integer
    type: object
  MsgVpnReplayLog:
    properties:
      egressEnabled:
        description: Enable or disable the transmission of messages from the Replay
          Log.
        type: boolean
      ingressEnabled:
        description: Enable or disable the reception of messages to the Replay Log.
        type: boolean
      maxSpoolUsage:
        description: The maximum spool usage allowed by the Replay Log, in megabytes
          (MB). If this limit is exceeded, old messages will be trimmed.
        format: int64
        type: integer
      msgSpoolUsage:
        description: The spool usage of the Replay Log, in bytes (B).
        format: int64
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      replayLogName:
        description: The name of the Replay Log.
        type: string
    type: object
  MsgVpnReplayLogLinks:
    properties:
      msgsUri:
        description: The URI of this MsgVpnReplayLog's msgs collection.
        type: string
      uri:
        description: The URI of this MsgVpnReplayLog object.
        type: string
    type: object
  MsgVpnReplayLogMsg:
    properties:
      attachmentSize:
        description: The size of the message attachment, in bytes (B).
        format: int64
        type: integer
      contentSize:
        description: The size of the message content, in bytes (B).
        format: int64
        type: integer
      dmqEligible:
        description: Indicates whether the message is eligible for the Dead Message
          Queue (DMQ).
        type: boolean
      msgId:
        description: The identifier (ID) of the message.
        format: int64
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      priority:
        description: The priority level of the message.
        format: int32
        type: integer
      publisherId:
        description: The identifier (ID) of the message publisher.
        format: int64
        type: integer
      replayLogName:
        description: The name of the Replay Log.
        type: string
      sequenceNumber:
        description: The sequence number assigned to the message. Applicable only
          to messages received on sequenced topics.
        format: int64
        type: integer
      spooledTime:
        description: The timestamp of when the message was spooled in the Replay Log.
          This value represents the number of seconds since 1970-01-01 00:00:00 UTC
          (Unix time).
        format: int32
        type: integer
    type: object
  MsgVpnReplayLogMsgLinks:
    properties:
      uri:
        description: The URI of this MsgVpnReplayLogMsg object.
        type: string
    type: object
  MsgVpnReplayLogMsgResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnReplayLogMsg'
      links:
        $ref: '#/definitions/MsgVpnReplayLogMsgLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnReplayLogMsgsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnReplayLogMsg'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnReplayLogMsgLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnReplayLogResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnReplayLog'
      links:
        $ref: '#/definitions/MsgVpnReplayLogLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnReplayLogsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnReplayLog'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnReplayLogLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpn'
      links:
        $ref: '#/definitions/MsgVpnLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnRestDeliveryPoint:
    properties:
      clientName:
        description: The name of the Client for the REST Delivery Point.
        type: string
      clientProfileName:
        description: The name of the Client Profile for the REST Delivery Point.
        type: string
      enabled:
        description: Indicates whether the REST Delivery Point is enabled.
        type: boolean
      lastFailureReason:
        description: The reason for the last REST Delivery Point failure.
        type: string
      lastFailureTime:
        description: The timestamp of the last REST Delivery Point failure. This value
          represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
        format: int32
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      restDeliveryPointName:
        description: The name of the REST Delivery Point.
        type: string
      timeConnectionsBlocked:
        description: The percentage of time the REST Delivery Point connections are
          blocked from transmitting data.
        format: int64
        type: integer
      up:
        description: Indicates whether the operational state of the REST Delivery
          Point is up.
        type: boolean
    type: object
  MsgVpnRestDeliveryPointLinks:
    properties:
      queueBindingsUri:
        description: The URI of this MsgVpnRestDeliveryPoint's queueBindings collection.
        type: string
      restConsumersUri:
        description: The URI of this MsgVpnRestDeliveryPoint's restConsumers collection.
        type: string
      uri:
        description: The URI of this MsgVpnRestDeliveryPoint object.
        type: string
    type: object
  MsgVpnRestDeliveryPointQueueBinding:
    properties:
      gatewayReplaceTargetAuthorityEnabled:
        description: Indicates whether the authority for the request-target is replaced
          with that configured for the REST Consumer remote.
        type: boolean
      lastFailureReason:
        description: The reason for the last REST Delivery Point queue binding failure.
        type: string
      lastFailureTime:
        description: The timestamp of the last REST Delivery Point queue binding failure.
          This value represents the number of seconds since 1970-01-01 00:00:00 UTC
          (Unix time).
        format: int32
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      postRequestTarget:
        description: The POST request-target string being used when sending POST requests
          to a REST Consumer.
        type: string
      queueBindingName:
        description: The name of a queue in the Message VPN.
        type: string
      restDeliveryPointName:
        description: The name of the REST Delivery Point.
        type: string
      up:
        description: Indicates whether the operational state of the REST Delivery
          Point queue binding is up.
        type: boolean
      uptime:
        description: The amount of time in seconds since the REST Delivery Point queue
          binding was up.
        format: int64
        type: integer
    type: object
  MsgVpnRestDeliveryPointQueueBindingLinks:
    properties:
      uri:
        description: The URI of this MsgVpnRestDeliveryPointQueueBinding object.
        type: string
    type: object
  MsgVpnRestDeliveryPointQueueBindingResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnRestDeliveryPointQueueBinding'
      links:
        $ref: '#/definitions/MsgVpnRestDeliveryPointQueueBindingLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnRestDeliveryPointQueueBindingsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnRestDeliveryPointQueueBinding'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnRestDeliveryPointQueueBindingLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnRestDeliveryPointResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnRestDeliveryPoint'
      links:
        $ref: '#/definitions/MsgVpnRestDeliveryPointLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnRestDeliveryPointRestConsumer:
    properties:
      authenticationHttpBasicUsername:
        description: The username that the REST Consumer will use to login to the
          REST host.
        type: string
      authenticationScheme:
        description: 'The authentication scheme used by the REST Consumer to login
          to the REST host. The allowed values and their meaning are:


          <pre>

          "none" - Login with no authentication. This may be useful for anonymous
          connections or when a REST Consumer does not require authentication.

          "http-basic" - Login with a username and optional password according to
          HTTP Basic authentication as per RFC2616.

          "client-certificate" - Login with a client TLS certificate as per RFC5246.
          Client certificate authentication is only available on TLS connections.

          </pre>

          '
        enum:
        - none
        - http-basic
        - client-certificate
        type: string
      counter:
        $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumerCounter'
      enabled:
        description: Indicates whether the REST Consumer is enabled.
        type: boolean
      lastConnectionFailureLocalEndpoint:
        description: The local endpoint at the time of the last connection failure.
        type: string
      lastConnectionFailureReason:
        description: The reason for the last connection failure between local and
          remote endpoints.
        type: string
      lastConnectionFailureRemoteEndpoint:
        description: The remote endpoint at the time of the last connection failure.
        type: string
      lastConnectionFailureTime:
        description: The timestamp of the last connection failure between local and
          remote endpoints. This value represents the number of seconds since 1970-01-01
          00:00:00 UTC (Unix time).
        format: int32
        type: integer
      lastFailureReason:
        description: The reason for the last REST Consumer failure.
        type: string
      lastFailureTime:
        description: The timestamp of the last REST Consumer failure. This value represents
          the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
        format: int32
        type: integer
      localInterface:
        description: The interface that will be used for all outgoing connections
          associated with the REST Consumer. When unspecified, an interface is automatically
          chosen.
        type: string
      maxPostWaitTime:
        description: The maximum amount of time (in seconds) to wait for an HTTP POST
          response from the REST Consumer. Once this time is exceeded, the TCP connection
          is reset.
        format: int32
        type: integer
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      outgoingConnectionCount:
        description: The number of concurrent TCP connections open to the REST Consumer.
        format: int32
        type: integer
      remoteHost:
        description: The IP address or DNS name for the REST Consumer.
        type: string
      remoteOutgoingConnectionUpCount:
        description: The number of outgoing connections for the REST Consumer that
          are up.
        format: int64
        type: integer
      remotePort:
        description: The port associated with the host of the REST Consumer.
        format: int64
        type: integer
      restConsumerName:
        description: The name of the REST Consumer.
        type: string
      restDeliveryPointName:
        description: The name of the REST Delivery Point.
        type: string
      retryDelay:
        description: The number of seconds that must pass before retrying the remote
          REST Consumer connection.
        format: int32
        type: integer
      tlsCipherSuiteList:
        description: The colon-separated list of cipher-suites the REST Consumer uses
          in its encrypted connection. All supported suites are included by default,
          from most-secure to least-secure. The REST Consumer should choose the first
          suite from this list that it supports.
        type: string
      tlsEnabled:
        description: Indicates whether TLS for the REST Consumer is enabled.
        type: boolean
      up:
        description: Indicates whether the operational state of the REST Consumer
          is up.
        type: boolean
    type: object
  MsgVpnRestDeliveryPointRestConsumerCounter:
    properties:
      httpRequestConnectionCloseTxMsgCount:
        description: The number of HTTP POST request messages transmitted to the REST
          Consumer to close the connection.
        format: int64
        type: integer
      httpRequestOutstandingTxMsgCount:
        description: The number of HTTP POST request messages transmitted to the REST
          Consumer that are waiting for a response.
        format: int64
        type: integer
      httpRequestTimedOutTxMsgCount:
        description: The number of HTTP POST request messages transmitted to the REST
          Consumer that have timed out.
        format: int64
        type: integer
      httpRequestTxByteCount:
        description: The amount of HTTP POST request messages transmitted to the REST
          Consumer, in bytes (B).
        format: int64
        type: integer
      httpRequestTxMsgCount:
        description: The number of HTTP POST request messages transmitted to the REST
          Consumer.
        format: int32
        type: integer
      httpResponseErrorRxMsgCount:
        description: The number of HTTP POST client/server error response messages
          received from the REST Consumer.
        format: int64
        type: integer
      httpResponseRxByteCount:
        description: The amount of HTTP POST response messages received from the REST
          Consumer, in bytes (B).
        format: int64
        type: integer
      httpResponseRxMsgCount:
        description: The number of HTTP POST response messages received from the REST
          Consumer.
        format: int64
        type: integer
      httpResponseSuccessRxMsgCount:
        description: The number of HTTP POST successful response messages received
          from the REST Consumer.
        format: int64
        type: integer
    type: object
  MsgVpnRestDeliveryPointRestConsumerLinks:
    properties:
      tlsTrustedCommonNamesUri:
        description: The URI of this MsgVpnRestDeliveryPointRestConsumer's tlsTrustedCommonNames
          collection.
        type: string
      uri:
        description: The URI of this MsgVpnRestDeliveryPointRestConsumer object.
        type: string
    type: object
  MsgVpnRestDeliveryPointRestConsumerResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumer'
      links:
        $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumerLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName:
    properties:
      msgVpnName:
        description: The name of the Message VPN.
        type: string
      restConsumerName:
        description: The name of the REST Consumer.
        type: string
      restDeliveryPointName:
        description: The name of the REST Delivery Point.
        type: string
      tlsTrustedCommonName:
        description: The expected trusted common name of the remote certificate.
        type: string
    type: object
  MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks:
    properties:
      uri:
        description: The URI of this MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName
          object.
        type: string
    type: object
  MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse:
    properties:
      data:
        $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName'
      links:
        $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks'
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnRestDeliveryPointRestConsumersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumer'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumerLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnRestDeliveryPointsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpnRestDeliveryPoint'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnRestDeliveryPointLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  MsgVpnsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/MsgVpn'
        type: array
      links:
        items:
          $ref: '#/definitions/MsgVpnLinks'
        type: array
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  SempError:
    properties:
      code:
        description: The error code which uniquely identifies the error that has occurred.
        format: int32
        type: integer
      description:
        description: The verbose description of the problem.
        type: string
      status:
        description: The terse status string associated with `code`.
        type: string
    required:
    - code
    - status
    - description
    type: object
  SempMeta:
    properties:
      error:
        $ref: '#/definitions/SempError'
      paging:
        $ref: '#/definitions/SempPaging'
      request:
        $ref: '#/definitions/SempRequest'
      responseCode:
        description: The HTTP response code, one of 200 (success), 4xx (client error),
          or 5xx (server error).
        format: int32
        type: integer
    required:
    - request
    - responseCode
    type: object
  SempMetaOnlyResponse:
    properties:
      meta:
        $ref: '#/definitions/SempMeta'
    required:
    - meta
    type: object
  SempPaging:
    properties:
      cursorQuery:
        description: The cursor, or position, for the next page of objects. Use this
          as the `cursor` query parameter of the next request.
        type: string
      nextPageUri:
        description: The URI of the next page of objects. `cursorQuery` is already
          embedded within this URI.
        type: string
    required:
    - cursorQuery
    - nextPageUri
    type: object
  SempRequest:
    properties:
      method:
        description: The HTTP method of the request which resulted in this response.
        type: string
      uri:
        description: The URI of the request which resulted in this response.
        type: string
    required:
    - uri
    - method
    type: object
host: www.solace.com
info:
  contact:
    email: support@solace.com
    name: Solace
    url: http://www.solace.com
  description: "SEMP (starting in `v2`, see note 1) is a RESTful API for configuring,\
    \ monitoring, and administering a Solace PubSub+ broker.\n\nSEMP uses URIs to\
    \ address manageable **resources** of the Solace PubSub+ broker. Resources are\
    \ individual **objects**, **collections** of objects, or (exclusively in the action\
    \ API) **actions**. This document applies to the following API:\n\n\nAPI|Base\
    \ Path|Purpose|Comments\n:---|:---|:---|:---\nMonitoring|/SEMP/v2/monitor|Querying\
    \ operational parameters|See note 2\n\n\n\nThe following APIs are also available:\n\
    \n\nAPI|Base Path|Purpose|Comments\n:---|:---|:---|:---\nAction|/SEMP/v2/action|Performing\
    \ actions|See note 2\nConfiguration|/SEMP/v2/config|Reading and writing config\
    \ state|See note 2\n\n\n\nResources are always nouns, with individual objects\
    \ being singular and collections being plural.\n\nObjects within a collection\
    \ are identified by an `obj-id`, which follows the collection name with the form\
    \ `collection-name/obj-id`.\n\nActions within an object are identified by an `action-id`,\
    \ which follows the object name with the form `obj-id/action-id`.\n\nSome examples:\n\
    \n```\n/SEMP/v2/config/msgVpns                        ; MsgVpn collection\n/SEMP/v2/config/msgVpns/a\
    \                      ; MsgVpn object named \"a\"\n/SEMP/v2/config/msgVpns/a/queues\
    \               ; Queue collection in MsgVpn \"a\"\n/SEMP/v2/config/msgVpns/a/queues/b\
    \             ; Queue object named \"b\" in MsgVpn \"a\"\n/SEMP/v2/action/msgVpns/a/queues/b/startReplay\
    \ ; Action that starts a replay on Queue \"b\" in MsgVpn \"a\"\n/SEMP/v2/monitor/msgVpns/a/clients\
    \             ; Client collection in MsgVpn \"a\"\n/SEMP/v2/monitor/msgVpns/a/clients/c\
    \           ; Client object named \"c\" in MsgVpn \"a\"\n```\n\n## Collection\
    \ Resources\n\nCollections are unordered lists of objects (unless described as\
    \ otherwise), and are described by JSON arrays. Each item in the array represents\
    \ an object in the same manner as the individual object would normally be represented.\
    \ In the configuration API, the creation of a new object is done through its collection\
    \ resource.\n\n## Object and Action Resources\n\nObjects are composed of attributes,\
    \ actions, collections, and other objects. They are described by JSON objects\
    \ as name/value pairs. The collections and actions of an object are not contained\
    \ directly in the object's JSON content; rather the content includes an attribute\
    \ containing a URI which points to the collections and actions. These contained\
    \ resources must be managed through this URI. At a minimum, every object has one\
    \ or more identifying attributes, and its own `uri` attribute which contains the\
    \ URI pointing to itself.\n\nActions are also composed of attributes, and are\
    \ described by JSON objects as name/value pairs. Unlike objects, however, they\
    \ are not members of a collection and cannot be retrieved, only performed. Actions\
    \ only exist in the\n action API.\n\nAttributes in an object or action may have\
    \ any (non-exclusively) of the following properties:\n\n\nProperty|Meaning|Comments\n\
    :---|:---|:---\nIdentifying|Attribute is involved in unique identification of\
    \ the object, and appears in its URI|\nRequired|Attribute must be provided in\
    \ the request|\nRead-Only|Attribute can only be read, not written|See note 3\n\
    Write-Only|Attribute can only be written, not read|\nRequires-Disable|Attribute\
    \ can only be changed when object is disabled|\nDeprecated|Attribute is deprecated,\
    \ and will disappear in the next SEMP version|\n\n\n\nIn some requests, certain\
    \ attributes may only be provided in certain combinations with other attributes:\n\
    \n\nRelationship|Meaning\n:---|:---\nRequires|Attribute may only be changed by\
    \ a request if a particular attribute or combination of attributes is also provided\
    \ in the request\nConflicts|Attribute may only be provided in a request if a particular\
    \ attribute or combination of attributes is not also provided in the request\n\
    \n\n\n## HTTP Methods\n\nThe following HTTP methods manipulate resources in accordance\
    \ with these general principles. Note that some methods are only used in certain\
    \ APIs:\n\n\nMethod|Resource|Meaning|Request Body|Response Body|Missing Request\
    \ Attributes\n:---|:---|:---|:---|:---|:---\nPOST|Collection|Create object|Initial\
    \ attribute values|Object attributes and metadata|Set to default\nPUT|Object|Create\
    \ or replace object|New attribute values|Object attributes and metadata|Set to\
    \ default (but see note 4)\nPUT|Action|Performs action|Action arguments|Action\
    \ metadata|N/A\nPATCH|Object|Update object|New attribute values|Object attributes\
    \ and metadata|unchanged\nDELETE|Object|Delete object|Empty|Object metadata|N/A\n\
    GET|Object|Get object|Empty|Object attributes and metadata|N/A\nGET|Collection|Get\
    \ collection|Empty|Object attributes and collection metadata|N/A\n\n\n\n## Common\
    \ Query Parameters\n\nThe following are some common query parameters that are\
    \ supported by many method/URI combinations. Individual URIs may document additional\
    \ parameters. Note that multiple query parameters can be used together in a single\
    \ URI, separated by the ampersand character. For example:\n\n```\n; Request for\
    \ the MsgVpns collection using two hypothetical query parameters \"q1\" and \"\
    q2\"\n; with values \"val1\" and \"val2\" respectively\n/SEMP/v2/monitor/msgVpns?q1=val1&q2=val2\n\
    ```\n\n### select\n\nInclude in the response only selected attributes of the object,\
    \ or exclude from the response selected attributes of the object. Use this query\
    \ parameter to limit the size of the returned data for each returned object, return\
    \ only those fields that are desired, or exclude fields that are not desired.\n\
    \nThe value of `select` is a comma-separated list of attribute names. If the list\
    \ contains attribute names that are not prefaced by `-`, only those attributes\
    \ are included in the response. If the list contains attribute names that are\
    \ prefaced by `-`, those attributes are excluded from the response. If the list\
    \ contains both types, then the difference of the first set of attributes and\
    \ the second set of attributes is returned. If the list is empty (i.e. `select=`),\
    \ no attributes are returned.\n\nAll attributes that are prefaced by `-` must\
    \ follow all attributes that are not prefaced by `-`. In addition, each attribute\
    \ name in the list must match at least one attribute in the object.\n\nNames may\
    \ include the `*` wildcard (zero or more characters). Nested attribute names are\
    \ supported using periods (e.g. `parentName.childName`).\n\nSome examples:\n\n\
    ```\n; List of all MsgVpn names\n/SEMP/v2/monitor/msgVpns?select=msgVpnName\n\
    ; List of all MsgVpn and their attributes except for their names\n/SEMP/v2/monitor/msgVpns?select=-msgVpnName\n\
    ; Authentication attributes of MsgVpn \"finance\"\n/SEMP/v2/monitor/msgVpns/finance?select=authentication*\n\
    ; All attributes of MsgVpn \"finance\" except for authentication attributes\n\
    /SEMP/v2/monitor/msgVpns/finance?select=-authentication*\n; Access related attributes\
    \ of Queue \"orderQ\" of MsgVpn \"finance\"\n/SEMP/v2/monitor/msgVpns/finance/queues/orderQ?select=owner,permission\n\
    ```\n\n### where\n\nInclude in the response only objects where certain conditions\
    \ are true. Use this query parameter to limit which objects are returned to those\
    \ whose attribute values meet the given conditions.\n\nThe value of `where` is\
    \ a comma-separated list of expressions. All expressions must be true for the\
    \ object to be included in the response. Each expression takes the form:\n\n```\n\
    expression  = attribute-name OP value\nOP          = '==' | '!=' | '&lt;' | '&gt;'\
    \ | '&lt;=' | '&gt;='\n```\n\n`value` may be a number, string, `true`, or `false`,\
    \ as appropriate for the type of `attribute-name`. Greater-than and less-than\
    \ comparisons only work for numbers. A `*` in a string `value` is interpreted\
    \ as a wildcard (zero or more characters). Some examples:\n\n```\n; Only enabled\
    \ MsgVpns\n/SEMP/v2/monitor/msgVpns?where=enabled==true\n; Only MsgVpns using\
    \ basic non-LDAP authentication\n/SEMP/v2/monitor/msgVpns?where=authenticationBasicEnabled==true,authenticationBasicType!=ldap\n\
    ; Only MsgVpns that allow more than 100 client connections\n/SEMP/v2/monitor/msgVpns?where=maxConnectionCount>100\n\
    ; Only MsgVpns with msgVpnName starting with \"B\":\n/SEMP/v2/monitor/msgVpns?where=msgVpnName==B*\n\
    ```\n\n### count\n\nLimit the count of objects in the response. This can be useful\
    \ to limit the size of the response for large collections. The minimum value for\
    \ `count` is `1` and the default is `10`. There is a hidden maximum as to prevent\
    \ overloading the system. For example:\n\n```\n; Up to 25 MsgVpns\n/SEMP/v2/monitor/msgVpns?count=25\n\
    ```\n\n### cursor\n\nThe cursor, or position, for the next page of objects. Cursors\
    \ are opaque data that should not be created or interpreted by SEMP clients, and\
    \ should only be used as described below.\n\nWhen a request is made for a collection\
    \ and there may be additional objects available for retrieval that are not included\
    \ in the initial response, the response will include a `cursorQuery` field containing\
    \ a cursor. The value of this field can be specified in the `cursor` query parameter\
    \ of a subsequent request to retrieve the next page of objects. For convenience,\
    \ an appropriate URI is constructed automatically by the broker and included in\
    \ the `nextPageUri` field of the response. This URI can be used directly to retrieve\
    \ the next page of objects.\n\n## Notes\n\nNote|Description\n:---:|:---\n1|This\
    \ specification defines SEMP starting in \"v2\", and not the original SEMP \"\
    v1\" interface. Request and response formats between \"v1\" and \"v2\" are entirely\
    \ incompatible, although both protocols share a common port configuration on the\
    \ Solace PubSub+ broker. They are differentiated by the initial portion of the\
    \ URI path, one of either \"/SEMP/\" or \"/SEMP/v2/\"\n2|This API is partially\
    \ implemented. Only a subset of all objects are available.\n3|Read-only attributes\
    \ may appear in POST and PUT/PATCH requests. However, if a read-only attribute\
    \ is not marked as identifying, it will be ignored during a PUT/PATCH.\n4|For\
    \ PUT, if the SEMP user is not authorized to modify the attribute, its value is\
    \ left unchanged rather than set to default. In addition, the values of write-only\
    \ attributes are not set to their defaults on a PUT. If the object does not exist,\
    \ it is created first.\n\n\n\n"
  title: SEMP (Solace Element Management Protocol)
  version: 2.11.00901000201
parameters:
  countQuery:
    default: 10
    description: Limit the count of objects in the response. See the documentation
      for the `count` parameter.
    in: query
    minimum: 1
    name: count
    required: false
    type: integer
  cursorQuery:
    description: The cursor, or position, for the next page of objects. See the documentation
      for the `cursor` parameter.
    in: query
    name: cursor
    required: false
    type: string
  selectQuery:
    collectionFormat: csv
    description: Include in the response only selected attributes of the object, or
      exclude from the response selected attributes of the object. See the documentation
      for the `select` parameter.
    in: query
    items:
      type: string
    name: select
    required: false
    type: array
  whereQuery:
    collectionFormat: csv
    description: Include in the response only objects where certain conditions are
      true. See the the documentation for the `where` parameter.
    in: query
    items:
      type: string
    name: where
    required: false
    type: array
paths:
  /about/api:
    get:
      description: 'Get an API Description object.


        A SEMP client authorized with a minimum access scope/level of "global/none"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getAboutApi
      parameters: []
      produces:
      - application/json
      responses:
        '200':
          description: The API Description object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/AboutApiResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get an API Description object.
      tags:
      - about
  /about/user:
    get:
      description: 'Get a User object.




        A SEMP client authorized with a minimum access scope/level of "global/none"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getAboutUser
      parameters:
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The User object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/AboutUserResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a User object.
      tags: &id001
      - about
  /about/user/msgVpns:
    get:
      description: 'Get a list of User Message VPN objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "global/none"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getAboutUserMsgVpns
      parameters:
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of User Message VPN objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/AboutUserMsgVpnsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of User Message VPN objects.
      tags: *id001
  /about/user/msgVpns/{msgVpnName}:
    get:
      description: 'Get a User Message VPN object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "global/none"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getAboutUserMsgVpn
      parameters:
      - description: The msgVpnName of the User Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The User Message VPN object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/AboutUserMsgVpnResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a User Message VPN object.
      tags: *id001
  /dmrClusters:
    get:
      description: 'Get a list of Cluster objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        dmrClusterName|x|




        A SEMP client authorized with a minimum access scope/level of "global/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getDmrClusters
      parameters:
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Cluster objects' attributes, and the request metadata.
          schema:
            $ref: '#/definitions/DmrClustersResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Cluster objects.
      tags: &id002
      - dmrCluster
  /dmrClusters/{dmrClusterName}:
    get:
      description: 'Get a Cluster object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        dmrClusterName|x|




        A SEMP client authorized with a minimum access scope/level of "global/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getDmrCluster
      parameters:
      - description: The dmrClusterName of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Cluster object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/DmrClusterResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Cluster object.
      tags: *id002
  /dmrClusters/{dmrClusterName}/links:
    get:
      description: 'Get a list of Link objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        dmrClusterName|x|

        remoteNodeName|x|




        A SEMP client authorized with a minimum access scope/level of "global/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getDmrClusterLinks
      parameters:
      - description: The dmrClusterName of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Link objects' attributes, and the request metadata.
          schema:
            $ref: '#/definitions/DmrClusterLinksResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Link objects.
      tags: *id002
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}:
    get:
      description: 'Get a Link object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        dmrClusterName|x|

        remoteNodeName|x|




        A SEMP client authorized with a minimum access scope/level of "global/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getDmrClusterLink
      parameters:
      - description: The dmrClusterName of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        type: string
      - description: The remoteNodeName of the Link.
        in: path
        name: remoteNodeName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Link object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/DmrClusterLinkResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Link object.
      tags: *id002
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/channels:
    get:
      description: 'Get a list of Cluster Link Channels objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        dmrClusterName|x|

        msgVpnName|x|

        remoteNodeName|x|




        A SEMP client authorized with a minimum access scope/level of "global/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getDmrClusterLinkChannels
      parameters:
      - description: The dmrClusterName of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        type: string
      - description: The remoteNodeName of the Link.
        in: path
        name: remoteNodeName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Cluster Link Channels objects' attributes, and
            the request metadata.
          schema:
            $ref: '#/definitions/DmrClusterLinkChannelsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Cluster Link Channels objects.
      tags: *id002
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/channels/{msgVpnName}:
    get:
      description: 'Get a Cluster Link Channels object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        dmrClusterName|x|

        msgVpnName|x|

        remoteNodeName|x|




        A SEMP client authorized with a minimum access scope/level of "global/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getDmrClusterLinkChannel
      parameters:
      - description: The dmrClusterName of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        type: string
      - description: The remoteNodeName of the Link.
        in: path
        name: remoteNodeName
        required: true
        type: string
      - description: The msgVpnName of the Cluster Link Channels.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Cluster Link Channels object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/DmrClusterLinkChannelResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Cluster Link Channels object.
      tags: *id002
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/remoteAddresses:
    get:
      description: 'Get a list of Remote Address objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        dmrClusterName|x|

        remoteAddress|x|

        remoteNodeName|x|




        A SEMP client authorized with a minimum access scope/level of "global/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getDmrClusterLinkRemoteAddresses
      parameters:
      - description: The dmrClusterName of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        type: string
      - description: The remoteNodeName of the Link.
        in: path
        name: remoteNodeName
        required: true
        type: string
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Remote Address objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/DmrClusterLinkRemoteAddressesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Remote Address objects.
      tags: *id002
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/remoteAddresses/{remoteAddress}:
    get:
      description: 'Get a Remote Address object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        dmrClusterName|x|

        remoteAddress|x|

        remoteNodeName|x|




        A SEMP client authorized with a minimum access scope/level of "global/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getDmrClusterLinkRemoteAddress
      parameters:
      - description: The dmrClusterName of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        type: string
      - description: The remoteNodeName of the Link.
        in: path
        name: remoteNodeName
        required: true
        type: string
      - description: The remoteAddress of the Remote Address.
        in: path
        name: remoteAddress
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Remote Address object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/DmrClusterLinkRemoteAddressResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Remote Address object.
      tags: *id002
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/tlsTrustedCommonNames:
    get:
      description: 'Get a list of Trusted Common Name objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        dmrClusterName|x|

        remoteNodeName|x|

        tlsTrustedCommonName|x|




        A SEMP client authorized with a minimum access scope/level of "global/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getDmrClusterLinkTlsTrustedCommonNames
      parameters:
      - description: The dmrClusterName of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        type: string
      - description: The remoteNodeName of the Link.
        in: path
        name: remoteNodeName
        required: true
        type: string
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Trusted Common Name objects' attributes, and the
            request metadata.
          schema:
            $ref: '#/definitions/DmrClusterLinkTlsTrustedCommonNamesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Trusted Common Name objects.
      tags: *id002
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/tlsTrustedCommonNames/{tlsTrustedCommonName}:
    get:
      description: 'Get a Trusted Common Name object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        dmrClusterName|x|

        remoteNodeName|x|

        tlsTrustedCommonName|x|




        A SEMP client authorized with a minimum access scope/level of "global/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getDmrClusterLinkTlsTrustedCommonName
      parameters:
      - description: The dmrClusterName of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        type: string
      - description: The remoteNodeName of the Link.
        in: path
        name: remoteNodeName
        required: true
        type: string
      - description: The tlsTrustedCommonName of the Trusted Common Name.
        in: path
        name: tlsTrustedCommonName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Trusted Common Name object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/DmrClusterLinkTlsTrustedCommonNameResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Trusted Common Name object.
      tags: *id002
  /dmrClusters/{dmrClusterName}/topologyIssues:
    get:
      description: 'Get a list of Cluster Topology Issue objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        dmrClusterName|x|

        topologyIssue|x|




        A SEMP client authorized with a minimum access scope/level of "global/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getDmrClusterTopologyIssues
      parameters:
      - description: The dmrClusterName of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Cluster Topology Issue objects' attributes, and
            the request metadata.
          schema:
            $ref: '#/definitions/DmrClusterTopologyIssuesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Cluster Topology Issue objects.
      tags: *id002
  /dmrClusters/{dmrClusterName}/topologyIssues/{topologyIssue}:
    get:
      description: 'Get a Cluster Topology Issue object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        dmrClusterName|x|

        topologyIssue|x|




        A SEMP client authorized with a minimum access scope/level of "global/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getDmrClusterTopologyIssue
      parameters:
      - description: The dmrClusterName of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        type: string
      - description: The topologyIssue of the Cluster Topology Issue.
        in: path
        name: topologyIssue
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Cluster Topology Issue object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/DmrClusterTopologyIssueResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Cluster Topology Issue object.
      tags: *id002
  /msgVpns:
    get:
      description: 'Get a list of Message VPN objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpns
      parameters:
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Message VPN objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Message VPN objects.
      tags: &id003
      - msgVpn
  /msgVpns/{msgVpnName}:
    get:
      description: 'Get a Message VPN object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpn
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Message VPN object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Message VPN object.
      tags: *id003
  /msgVpns/{msgVpnName}/aclProfiles:
    get:
      description: 'Get a list of ACL Profile objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        aclProfileName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnAclProfiles
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of ACL Profile objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnAclProfilesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of ACL Profile objects.
      tags: &id004
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}:
    get:
      description: 'Get an ACL Profile object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        aclProfileName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnAclProfile
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The aclProfileName of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The ACL Profile object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnAclProfileResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get an ACL Profile object.
      tags: *id004
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions:
    get:
      description: 'Get a list of Client Connect Exception objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        aclProfileName|x|

        clientConnectExceptionAddress|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnAclProfileClientConnectExceptions
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The aclProfileName of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Client Connect Exception objects' attributes, and
            the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnAclProfileClientConnectExceptionsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Client Connect Exception objects.
      tags: *id004
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions/{clientConnectExceptionAddress}:
    get:
      description: 'Get a Client Connect Exception object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        aclProfileName|x|

        clientConnectExceptionAddress|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnAclProfileClientConnectException
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The aclProfileName of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        type: string
      - description: The clientConnectExceptionAddress of the Client Connect Exception.
        in: path
        name: clientConnectExceptionAddress
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Client Connect Exception object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnAclProfileClientConnectExceptionResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Client Connect Exception object.
      tags: *id004
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions:
    get:
      description: 'Get a list of Publish Topic Exception objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        aclProfileName|x|

        msgVpnName|x|

        publishExceptionTopic|x|

        topicSyntax|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnAclProfilePublishExceptions
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The aclProfileName of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Publish Topic Exception objects' attributes, and
            the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnAclProfilePublishExceptionsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Publish Topic Exception objects.
      tags: *id004
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions/{topicSyntax},{publishExceptionTopic}:
    get:
      description: 'Get a Publish Topic Exception object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        aclProfileName|x|

        msgVpnName|x|

        publishExceptionTopic|x|

        topicSyntax|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnAclProfilePublishException
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The aclProfileName of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        type: string
      - description: The topicSyntax of the Publish Topic Exception.
        in: path
        name: topicSyntax
        required: true
        type: string
      - description: The publishExceptionTopic of the Publish Topic Exception.
        in: path
        name: publishExceptionTopic
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Publish Topic Exception object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnAclProfilePublishExceptionResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Publish Topic Exception object.
      tags: *id004
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions:
    get:
      description: 'Get a list of Subscribe Topic Exception objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        aclProfileName|x|

        msgVpnName|x|

        subscribeExceptionTopic|x|

        topicSyntax|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnAclProfileSubscribeExceptions
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The aclProfileName of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Subscribe Topic Exception objects' attributes,
            and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnAclProfileSubscribeExceptionsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Subscribe Topic Exception objects.
      tags: *id004
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions/{topicSyntax},{subscribeExceptionTopic}:
    get:
      description: 'Get a Subscribe Topic Exception object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        aclProfileName|x|

        msgVpnName|x|

        subscribeExceptionTopic|x|

        topicSyntax|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnAclProfileSubscribeException
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The aclProfileName of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        type: string
      - description: The topicSyntax of the Subscribe Topic Exception.
        in: path
        name: topicSyntax
        required: true
        type: string
      - description: The subscribeExceptionTopic of the Subscribe Topic Exception.
        in: path
        name: subscribeExceptionTopic
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Subscribe Topic Exception object's attributes, and the
            request metadata.
          schema:
            $ref: '#/definitions/MsgVpnAclProfileSubscribeExceptionResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Subscribe Topic Exception object.
      tags: *id004
  /msgVpns/{msgVpnName}/authorizationGroups:
    get:
      description: 'Get a list of LDAP Authorization Group objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        authorizationGroupName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnAuthorizationGroups
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of LDAP Authorization Group objects' attributes, and
            the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnAuthorizationGroupsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of LDAP Authorization Group objects.
      tags: &id005
      - msgVpn
      - authorizationGroup
  /msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}:
    get:
      description: 'Get an LDAP Authorization Group object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        authorizationGroupName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnAuthorizationGroup
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The authorizationGroupName of the LDAP Authorization Group.
        in: path
        name: authorizationGroupName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The LDAP Authorization Group object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnAuthorizationGroupResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get an LDAP Authorization Group object.
      tags: *id005
  /msgVpns/{msgVpnName}/bridges:
    get:
      description: 'Get a list of Bridge objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        bridgeName|x|

        bridgeVirtualRouter|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnBridges
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Bridge objects' attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnBridgesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Bridge objects.
      tags: &id006
      - msgVpn
      - bridge
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}:
    get:
      description: 'Get a Bridge object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        bridgeName|x|

        bridgeVirtualRouter|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnBridge
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The bridgeName of the Bridge.
        in: path
        name: bridgeName
        required: true
        type: string
      - description: The bridgeVirtualRouter of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Bridge object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnBridgeResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Bridge object.
      tags: *id006
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/localSubscriptions:
    get:
      description: 'Get a list of Bridge Local Subscriptions objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        bridgeName|x|

        bridgeVirtualRouter|x|

        localSubscriptionTopic|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnBridgeLocalSubscriptions
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The bridgeName of the Bridge.
        in: path
        name: bridgeName
        required: true
        type: string
      - description: The bridgeVirtualRouter of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Bridge Local Subscriptions objects' attributes,
            and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnBridgeLocalSubscriptionsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Bridge Local Subscriptions objects.
      tags: *id006
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/localSubscriptions/{localSubscriptionTopic}:
    get:
      description: 'Get a Bridge Local Subscriptions object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        bridgeName|x|

        bridgeVirtualRouter|x|

        localSubscriptionTopic|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnBridgeLocalSubscription
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The bridgeName of the Bridge.
        in: path
        name: bridgeName
        required: true
        type: string
      - description: The bridgeVirtualRouter of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        type: string
      - description: The localSubscriptionTopic of the Bridge Local Subscriptions.
        in: path
        name: localSubscriptionTopic
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Bridge Local Subscriptions object's attributes, and the
            request metadata.
          schema:
            $ref: '#/definitions/MsgVpnBridgeLocalSubscriptionResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Bridge Local Subscriptions object.
      tags: *id006
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns:
    get:
      description: 'Get a list of Remote Message VPN objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        bridgeName|x|

        bridgeVirtualRouter|x|

        msgVpnName|x|

        remoteMsgVpnInterface|x|

        remoteMsgVpnLocation|x|

        remoteMsgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnBridgeRemoteMsgVpns
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The bridgeName of the Bridge.
        in: path
        name: bridgeName
        required: true
        type: string
      - description: The bridgeVirtualRouter of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        type: string
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Remote Message VPN objects' attributes, and the
            request metadata.
          schema:
            $ref: '#/definitions/MsgVpnBridgeRemoteMsgVpnsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Remote Message VPN objects.
      tags: *id006
  ? /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}
  : get:
      description: 'Get a Remote Message VPN object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        bridgeName|x|

        bridgeVirtualRouter|x|

        msgVpnName|x|

        remoteMsgVpnInterface|x|

        remoteMsgVpnLocation|x|

        remoteMsgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnBridgeRemoteMsgVpn
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The bridgeName of the Bridge.
        in: path
        name: bridgeName
        required: true
        type: string
      - description: The bridgeVirtualRouter of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        type: string
      - description: The remoteMsgVpnName of the Remote Message VPN.
        in: path
        name: remoteMsgVpnName
        required: true
        type: string
      - description: The remoteMsgVpnLocation of the Remote Message VPN.
        in: path
        name: remoteMsgVpnLocation
        required: true
        type: string
      - description: The remoteMsgVpnInterface of the Remote Message VPN.
        in: path
        name: remoteMsgVpnInterface
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Remote Message VPN object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnBridgeRemoteMsgVpnResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Remote Message VPN object.
      tags: *id006
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions:
    get:
      description: 'Get a list of Remote Subscription objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        bridgeName|x|

        bridgeVirtualRouter|x|

        msgVpnName|x|

        remoteSubscriptionTopic|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnBridgeRemoteSubscriptions
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The bridgeName of the Bridge.
        in: path
        name: bridgeName
        required: true
        type: string
      - description: The bridgeVirtualRouter of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Remote Subscription objects' attributes, and the
            request metadata.
          schema:
            $ref: '#/definitions/MsgVpnBridgeRemoteSubscriptionsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Remote Subscription objects.
      tags: *id006
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions/{remoteSubscriptionTopic}:
    get:
      description: 'Get a Remote Subscription object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        bridgeName|x|

        bridgeVirtualRouter|x|

        msgVpnName|x|

        remoteSubscriptionTopic|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnBridgeRemoteSubscription
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The bridgeName of the Bridge.
        in: path
        name: bridgeName
        required: true
        type: string
      - description: The bridgeVirtualRouter of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        type: string
      - description: The remoteSubscriptionTopic of the Remote Subscription.
        in: path
        name: remoteSubscriptionTopic
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Remote Subscription object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnBridgeRemoteSubscriptionResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Remote Subscription object.
      tags: *id006
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames:
    get:
      description: 'Get a list of Trusted Common Name objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        bridgeName|x|

        bridgeVirtualRouter|x|

        msgVpnName|x|

        tlsTrustedCommonName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnBridgeTlsTrustedCommonNames
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The bridgeName of the Bridge.
        in: path
        name: bridgeName
        required: true
        type: string
      - description: The bridgeVirtualRouter of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        type: string
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Trusted Common Name objects' attributes, and the
            request metadata.
          schema:
            $ref: '#/definitions/MsgVpnBridgeTlsTrustedCommonNamesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Trusted Common Name objects.
      tags: *id006
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames/{tlsTrustedCommonName}:
    get:
      description: 'Get a Trusted Common Name object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        bridgeName|x|

        bridgeVirtualRouter|x|

        msgVpnName|x|

        tlsTrustedCommonName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnBridgeTlsTrustedCommonName
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The bridgeName of the Bridge.
        in: path
        name: bridgeName
        required: true
        type: string
      - description: The bridgeVirtualRouter of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        type: string
      - description: The tlsTrustedCommonName of the Trusted Common Name.
        in: path
        name: tlsTrustedCommonName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Trusted Common Name object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnBridgeTlsTrustedCommonNameResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Trusted Common Name object.
      tags: *id006
  /msgVpns/{msgVpnName}/clientProfiles:
    get:
      description: 'Get a list of Client Profile objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        clientProfileName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnClientProfiles
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Client Profile objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnClientProfilesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Client Profile objects.
      tags: &id007
      - msgVpn
      - clientProfile
  /msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}:
    get:
      description: 'Get a Client Profile object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        clientProfileName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnClientProfile
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The clientProfileName of the Client Profile.
        in: path
        name: clientProfileName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Client Profile object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnClientProfileResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Client Profile object.
      tags: *id007
  /msgVpns/{msgVpnName}/clientUsernames:
    get:
      description: 'Get a list of Client Username objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        clientUsername|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnClientUsernames
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Client Username objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnClientUsernamesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Client Username objects.
      tags: &id008
      - msgVpn
      - clientUsername
  /msgVpns/{msgVpnName}/clientUsernames/{clientUsername}:
    get:
      description: 'Get a Client Username object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        clientUsername|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnClientUsername
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The clientUsername of the Client Username.
        in: path
        name: clientUsername
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Client Username object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnClientUsernameResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Client Username object.
      tags: *id008
  /msgVpns/{msgVpnName}/distributedCaches:
    get:
      description: 'Get a list of Distributed Cache objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCaches
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Distributed Cache objects' attributes, and the
            request metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCachesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Distributed Cache objects.
      tags: &id009
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}:
    get:
      description: 'Get a Distributed Cache object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCache
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Distributed Cache object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Distributed Cache object.
      tags: *id009
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters:
    get:
      description: 'Get a list of Cache Cluster objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusters
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Cache Cluster objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClustersResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Cache Cluster objects.
      tags: *id009
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}:
    get:
      description: 'Get a Cache Cluster object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheCluster
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Cache Cluster object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Cache Cluster object.
      tags: *id009
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters:
    get:
      description: 'Get a list of Home Cache Cluster objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        homeClusterName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusters
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Home Cache Cluster objects' attributes, and the
            request metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Home Cache Cluster objects.
      tags: *id009
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}:
    get:
      description: 'Get a Home Cache Cluster object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        homeClusterName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeCluster
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - description: The homeClusterName of the Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Home Cache Cluster object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Home Cache Cluster object.
      tags: *id009
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}/topicPrefixes
  : get:
      description: 'Get a list of Topic Prefix objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        homeClusterName|x|

        msgVpnName|x|

        topicPrefix|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixes
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - description: The homeClusterName of the Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Topic Prefix objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Topic Prefix objects.
      tags: *id009
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}/topicPrefixes/{topicPrefix}
  : get:
      description: 'Get a Topic Prefix object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        homeClusterName|x|

        msgVpnName|x|

        topicPrefix|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - description: The homeClusterName of the Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        type: string
      - description: The topicPrefix of the Topic Prefix.
        in: path
        name: topicPrefix
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Topic Prefix object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Topic Prefix object.
      tags: *id009
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances:
    get:
      description: 'Get a list of Cache Instance objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        instanceName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusterInstances
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Cache Instance objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterInstancesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Cache Instance objects.
      tags: *id009
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}:
    get:
      description: 'Get a Cache Instance object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        instanceName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusterInstance
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - description: The instanceName of the Cache Instance.
        in: path
        name: instanceName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Cache Instance object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Cache Instance object.
      tags: *id009
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteGlobalCachingHomeClusters
  : get:
      description: 'Get a list of Remote Home Cache Cluster objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        homeClusterName|x|

        instanceName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusters
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - description: The instanceName of the Cache Instance.
        in: path
        name: instanceName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Remote Home Cache Cluster objects' attributes,
            and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClustersResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Remote Home Cache Cluster objects.
      tags: *id009
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteGlobalCachingHomeClusters/{homeClusterName}
  : get:
      description: 'Get a Remote Home Cache Cluster object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        homeClusterName|x|

        instanceName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - description: The instanceName of the Cache Instance.
        in: path
        name: instanceName
        required: true
        type: string
      - description: The homeClusterName of the Remote Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Remote Home Cache Cluster object's attributes, and the
            request metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Remote Home Cache Cluster object.
      tags: *id009
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteTopics:
    get:
      description: 'Get a list of Remote Topic objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        instanceName|x|

        msgVpnName|x|

        topic|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusterInstanceRemoteTopics
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - description: The instanceName of the Cache Instance.
        in: path
        name: instanceName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Remote Topic objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopicsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Remote Topic objects.
      tags: *id009
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteTopics/{topic}:
    get:
      description: 'Get a Remote Topic object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        instanceName|x|

        msgVpnName|x|

        topic|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusterInstanceRemoteTopic
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - description: The instanceName of the Cache Instance.
        in: path
        name: instanceName
        required: true
        type: string
      - description: The topic of the Remote Topic.
        in: path
        name: topic
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Remote Topic object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterInstanceRemoteTopicResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Remote Topic object.
      tags: *id009
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/topics:
    get:
      description: 'Get a list of Topic objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        msgVpnName|x|

        topic|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusterTopics
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Topic objects' attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterTopicsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Topic objects.
      tags: *id009
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/topics/{topic}:
    get:
      description: 'Get a Topic object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        clusterName|x|

        msgVpnName|x|

        topic|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDistributedCacheClusterTopic
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - description: The clusterName of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        type: string
      - description: The topic of the Topic.
        in: path
        name: topic
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Topic object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnDistributedCacheClusterTopicResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Topic object.
      tags: *id009
  /msgVpns/{msgVpnName}/dmrBridges:
    get:
      description: 'Get a list of DMR Bridge objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        remoteNodeName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDmrBridges
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of DMR Bridge objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnDmrBridgesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of DMR Bridge objects.
      tags: &id010
      - msgVpn
      - dmrBridge
  /msgVpns/{msgVpnName}/dmrBridges/{remoteNodeName}:
    get:
      description: 'Get a DMR Bridge object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        remoteNodeName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnDmrBridge
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The remoteNodeName of the DMR Bridge.
        in: path
        name: remoteNodeName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The DMR Bridge object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnDmrBridgeResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a DMR Bridge object.
      tags: *id010
  /msgVpns/{msgVpnName}/jndiConnectionFactories:
    get:
      description: 'Get a list of JNDI Connection Factory objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        connectionFactoryName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnJndiConnectionFactories
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of JNDI Connection Factory objects' attributes, and
            the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnJndiConnectionFactoriesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of JNDI Connection Factory objects.
      tags: &id011
      - msgVpn
      - jndi
  /msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}:
    get:
      description: 'Get a JNDI Connection Factory object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        connectionFactoryName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnJndiConnectionFactory
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The connectionFactoryName of the JNDI Connection Factory.
        in: path
        name: connectionFactoryName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The JNDI Connection Factory object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnJndiConnectionFactoryResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a JNDI Connection Factory object.
      tags: *id011
  /msgVpns/{msgVpnName}/jndiQueues:
    get:
      description: 'Get a list of JNDI Queue objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        queueName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnJndiQueues
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of JNDI Queue objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnJndiQueuesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of JNDI Queue objects.
      tags: &id012
      - msgVpn
      - jndi
  /msgVpns/{msgVpnName}/jndiQueues/{queueName}:
    get:
      description: 'Get a JNDI Queue object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        queueName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnJndiQueue
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The queueName of the JNDI Queue.
        in: path
        name: queueName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The JNDI Queue object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnJndiQueueResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a JNDI Queue object.
      tags: *id012
  /msgVpns/{msgVpnName}/jndiTopics:
    get:
      description: 'Get a list of JNDI Topic objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        topicName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnJndiTopics
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of JNDI Topic objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnJndiTopicsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of JNDI Topic objects.
      tags: &id013
      - msgVpn
      - jndi
  /msgVpns/{msgVpnName}/jndiTopics/{topicName}:
    get:
      description: 'Get a JNDI Topic object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        topicName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnJndiTopic
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The topicName of the JNDI Topic.
        in: path
        name: topicName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The JNDI Topic object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnJndiTopicResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a JNDI Topic object.
      tags: *id013
  /msgVpns/{msgVpnName}/mqttRetainCaches:
    get:
      description: 'Get a list of MQTT Retain Cache objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnMqttRetainCaches
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of MQTT Retain Cache objects' attributes, and the
            request metadata.
          schema:
            $ref: '#/definitions/MsgVpnMqttRetainCachesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of MQTT Retain Cache objects.
      tags: &id014
      - msgVpn
      - mqttRetainCache
  /msgVpns/{msgVpnName}/mqttRetainCaches/{cacheName}:
    get:
      description: 'Get an MQTT Retain Cache object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        cacheName|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnMqttRetainCache
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The cacheName of the MQTT Retain Cache.
        in: path
        name: cacheName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The MQTT Retain Cache object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnMqttRetainCacheResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get an MQTT Retain Cache object.
      tags: *id014
  /msgVpns/{msgVpnName}/mqttSessions:
    get:
      description: 'Get a list of MQTT Session objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        mqttSessionClientId|x|

        mqttSessionVirtualRouter|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnMqttSessions
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of MQTT Session objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnMqttSessionsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of MQTT Session objects.
      tags: &id015
      - msgVpn
      - mqttSession
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}:
    get:
      description: 'Get an MQTT Session object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        mqttSessionClientId|x|

        mqttSessionVirtualRouter|x|

        msgVpnName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnMqttSession
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The mqttSessionClientId of the MQTT Session.
        in: path
        name: mqttSessionClientId
        required: true
        type: string
      - description: The mqttSessionVirtualRouter of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The MQTT Session object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnMqttSessionResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get an MQTT Session object.
      tags: *id015
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions:
    get:
      description: 'Get a list of Subscription objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        mqttSessionClientId|x|

        mqttSessionVirtualRouter|x|

        msgVpnName|x|

        subscriptionTopic|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnMqttSessionSubscriptions
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The mqttSessionClientId of the MQTT Session.
        in: path
        name: mqttSessionClientId
        required: true
        type: string
      - description: The mqttSessionVirtualRouter of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Subscription objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnMqttSessionSubscriptionsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Subscription objects.
      tags: *id015
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}:
    get:
      description: 'Get a Subscription object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        mqttSessionClientId|x|

        mqttSessionVirtualRouter|x|

        msgVpnName|x|

        subscriptionTopic|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnMqttSessionSubscription
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The mqttSessionClientId of the MQTT Session.
        in: path
        name: mqttSessionClientId
        required: true
        type: string
      - description: The mqttSessionVirtualRouter of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        type: string
      - description: The subscriptionTopic of the Subscription.
        in: path
        name: subscriptionTopic
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Subscription object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnMqttSessionSubscriptionResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Subscription object.
      tags: *id015
  /msgVpns/{msgVpnName}/replayLogs:
    get:
      description: 'Get a list of Replay Log objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        replayLogName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnReplayLogs
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Replay Log objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnReplayLogsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Replay Log objects.
      tags: &id016
      - msgVpn
      - replayLog
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}:
    get:
      description: 'Get a Replay Log object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        replayLogName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnReplayLog
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The replayLogName of the Replay Log.
        in: path
        name: replayLogName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Replay Log object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnReplayLogResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Replay Log object.
      tags: *id016
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}/msgs:
    get:
      description: 'Get a list of Message objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgId|x|

        msgVpnName|x|

        replayLogName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnReplayLogMsgs
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The replayLogName of the Replay Log.
        in: path
        name: replayLogName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Message objects' attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnReplayLogMsgsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Message objects.
      tags: *id016
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}/msgs/{msgId}:
    get:
      description: 'Get a Message object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgId|x|

        msgVpnName|x|

        replayLogName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnReplayLogMsg
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The replayLogName of the Replay Log.
        in: path
        name: replayLogName
        required: true
        type: string
      - description: The msgId of the Message.
        in: path
        name: msgId
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Message object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnReplayLogMsgResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Message object.
      tags: *id016
  /msgVpns/{msgVpnName}/restDeliveryPoints:
    get:
      description: 'Get a list of REST Delivery Point objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        restDeliveryPointName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnRestDeliveryPoints
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of REST Delivery Point objects' attributes, and the
            request metadata.
          schema:
            $ref: '#/definitions/MsgVpnRestDeliveryPointsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of REST Delivery Point objects.
      tags: &id017
      - msgVpn
      - restDeliveryPoint
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}:
    get:
      description: 'Get a REST Delivery Point object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        restDeliveryPointName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnRestDeliveryPoint
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The restDeliveryPointName of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The REST Delivery Point object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnRestDeliveryPointResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a REST Delivery Point object.
      tags: *id017
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings:
    get:
      description: 'Get a list of Queue Binding objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        queueBindingName|x|

        restDeliveryPointName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnRestDeliveryPointQueueBindings
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The restDeliveryPointName of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Queue Binding objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnRestDeliveryPointQueueBindingsResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Queue Binding objects.
      tags: *id017
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}:
    get:
      description: 'Get a Queue Binding object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        queueBindingName|x|

        restDeliveryPointName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The restDeliveryPointName of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        type: string
      - description: The queueBindingName of the Queue Binding.
        in: path
        name: queueBindingName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Queue Binding object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnRestDeliveryPointQueueBindingResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Queue Binding object.
      tags: *id017
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers:
    get:
      description: 'Get a list of REST Consumer objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        restConsumerName|x|

        restDeliveryPointName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnRestDeliveryPointRestConsumers
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The restDeliveryPointName of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        type: string
      - $ref: '#/parameters/countQuery'
      - $ref: '#/parameters/cursorQuery'
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of REST Consumer objects' attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumersResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of REST Consumer objects.
      tags: *id017
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}:
    get:
      description: 'Get a REST Consumer object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        restConsumerName|x|

        restDeliveryPointName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The restDeliveryPointName of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        type: string
      - description: The restConsumerName of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The REST Consumer object's attributes, and the request metadata.
          schema:
            $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumerResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a REST Consumer object.
      tags: *id017
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames:
    get:
      description: 'Get a list of Trusted Common Name objects.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        restConsumerName|x|

        restDeliveryPointName|x|

        tlsTrustedCommonName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNames
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The restDeliveryPointName of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        type: string
      - description: The restConsumerName of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        type: string
      - $ref: '#/parameters/whereQuery'
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The list of Trusted Common Name objects' attributes, and the
            request metadata.
          schema:
            $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a list of Trusted Common Name objects.
      tags: *id017
  ? /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames/{tlsTrustedCommonName}
  : get:
      description: 'Get a Trusted Common Name object.



        Attribute|Identifying|Deprecated

        :---|:---:|:---:

        msgVpnName|x|

        restConsumerName|x|

        restDeliveryPointName|x|

        tlsTrustedCommonName|x|




        A SEMP client authorized with a minimum access scope/level of "vpn/readonly"
        is required to perform this operation.


        This has been available since 2.11.'
      operationId: getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName
      parameters:
      - description: The msgVpnName of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        type: string
      - description: The restDeliveryPointName of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        type: string
      - description: The restConsumerName of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        type: string
      - description: The tlsTrustedCommonName of the Trusted Common Name.
        in: path
        name: tlsTrustedCommonName
        required: true
        type: string
      - $ref: '#/parameters/selectQuery'
      produces:
      - application/json
      responses:
        '200':
          description: The Trusted Common Name object's attributes, and the request
            metadata.
          schema:
            $ref: '#/definitions/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse'
        default:
          description: Error response
          schema:
            $ref: '#/definitions/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      summary: Get a Trusted Common Name object.
      tags: *id017
produces:
- application/json
schemes:
- http
- https
securityDefinitions:
  basicAuth:
    description: basic authentication
    type: basic
swagger: '2.0'
tags: []
